rules:

- id: ban-system-time-now
  languages:
    - rust
  message: Use fedimint_core::time::now instead of std::time::SystemTime::now for better wasm compatibility.
  pattern: std::time::SystemTime::now

  severity: WARNING

- id: ban-system-time-elapsed
  languages:
    - rust
  message: Use fedimint_core::time::now and std::time::duration_since to compare an elapsed time for better wasm compatibility.
  pattern: $SYSTEM_TIME.elapsed()
  paths:
    exclude:
      # server only
      - fedimint-server/
      # doesn't run in wasm
      - fedimint-load-test-tool/
      # doesn't run in wasm
      - devimint/
  severity: WARNING

- id: ban-instant-now
  languages:
    - rust
  message: Use fedimint_core::time::now instead of Instant::now for better wasm compatibility. ATM. there's no good Instant replacement for WASM, so we need to resort to SystemTime.
  
  pattern-either:
    - pattern: std::time::Instant::now
    - pattern: tokio::time::Instant::now

  severity: WARNING
  paths:
    exclude:
      # doesn't run in wasm
      - devimint/
      # server only
      - fedimint-server/

- id: ban-fs-write
  languages:
    - rust
  message: Overwriting existing files is rarely a good idea. Use fedimint-core::util::write_overwrite if you are really sure you want to overwrite existing data or `fedimint-core::util::write_overwrite::write_new` if you don't. Alternatively use `fs::File::options` or `tokio::fs::OpenOptions` and express intention explicitly.
  pattern-either:
    - pattern: tokio::fs::write
    - pattern: std::fs::write
  severity: WARNING

- id: ban-file-create
  languages:
    - rust
  message: Overwriting existing files is rarely a good idea. `fs::File::options` or `tokio::fs::OpenOptions` and express intention explicitly.
  pattern-either:
    - pattern: std::fs::File::create
    - pattern: tokio::fs::File::create
  severity: WARNING

- id: ban-tokio-spawn
  languages:
    - rust
  message: "`tokio::spawn` won't set task name by default. use `fedimint_core::runtime::spawn` instead"
  pattern: tokio::spawn
  severity: WARNING

- id: ban-tokio-sleep
  languages:
    - rust
  message: "`tokio::time::sleep` doesn't work in WASM. Use `fedimint_core::runtime::sleep` instead."
  pattern: tokio::time::sleep
  severity: WARNING

- id: ban-raw-block-on
  languages:
    - rust
  message: Use `fedimint_core::runtime::block_on()` instead.
  pattern-either:
    - pattern: futures::executor::block_on
    - pattern: tokio::runtime::Handle::block_on
    - pattern: tokio::runtime::Handle::current
  severity: WARNING

- id: ban-raw-block-in-place
  languages:
    - rust
  message: Use `fedimint_core::runtime::block_in_place()` instead.
  pattern-either:
    - pattern: tokio::task::block_in_place
  severity: WARNING

- id: ban-raw-url
  languages:
    - rust
  message: "`url::Url` may expose confidential username + passwords to logs etc. Use `fedimint_core::SafeUrl` instead."
  pattern: url::Url
  severity: WARNING

- id: use-log-targets
  languages:
    - rust
  message: Log statements should have static target defined to aid filtering
  patterns:
    # semgrep struggles with finding boundaries of rust macro invocation when ellipsis (`...`) is used
    # so matching this one with raw regexes instead
    - pattern-regex: (error|warn|info)!\([^;]*?\);
    - pattern-not-regex: '(error|warn|info)!\(\s*target: [^;]*?\);'
  severity: WARNING
  paths:
    include:
      - fedimint-server/
      - fedimint-core/
      - fedimint-cli/
      - fedimint-client/

- id: use-log-instrument-targets
  languages:
    - rust
  message: Instrument statements should have static target defined to aid filtering
  patterns:
    # semgrep struggles with finding boundaries of rust macro invocation when ellipsis (`...`) is used
    # so matching this one with raw regexes instead
    - pattern-regex: '#\[instrument\([^;]*?\)\]'
    - pattern-not-regex: '#\[instrument\(\s*target\s*=\s*[^;]*?\)\]'
  severity: WARNING

- id: use-client-log-targets
  languages:
    - rust
  message: Log statements in clients should have static target prefixed with `LOG_CLIENT_` (`client::`)
  patterns:
    # semgrep struggles with finding boundaries of rust macro invocation when ellipsis (`...`) is used
    # so matching this one with raw regexes instead
    - pattern-regex: '(error|warn|info|debug|trace)!\(\s*target: [^;]*?\);'
    - pattern-not-regex: '(error|warn|info|debug|trace)!\(\s*target: LOG_CLIENT[^;]*?\);'
  severity: WARNING
  paths:
    include:
      - fedimint-client/
      - fedimint-cli/
      - modules/*-client/

- id: ban-wildcard-imports
  languages:
    - rust
  message: "Wildcard imports make it unclear which items are being used. Avoid using `use ...::*;` except in sub-modules of a file such as `use super::*;` in a test module."
  pattern-regex: '^use .*::\*;$'
  severity: WARNING

- id: ban-direct-sleep-in-tests
  languages:
    - rust
  patterns:
    - pattern-either:
      - pattern: sleep(...)
      - pattern: fedimint_core::task::sleep(...)
      - pattern: fedimint_core::runtime::sleep(...)
  paths:
    include:
      - fedimint-testing/
      - fedimint-wasm-testing/
      - fedimint-wasm-tests/
      - modules/fedimint-dummy-tests/
      - modules/fedimint-wallet-tests/
      - modules/fedimint-ln-tests/
      - modules/fedimint-mint-tests/
      - gateway/ln-gateway/tests/
      - fedimint-client/src/backup/tests.rs
      - devimint/src/tests.rs
  message: "Direct use of fedimint_core::runtime::sleep in tests is discouraged. Use fedimint_core::task::sleep_in_test instead."
  severity: WARNING

- id: ban-sleep-in-test-scripts
  languages:
     - bash
  patterns:
    - pattern: sleep $X
  paths:
    include:
      - scripts/tests/
  message: "Sleeping in test scripts is discouraged. Sleep in rust using fedimint_core::task::sleep_in_test instead."
  severity: WARNING

- id: ban-version-req-in-devimint
  languages:
    - rust
  pattern: semver::VersionReq::parse
  paths:
    include:
      - devimint/
  message: "semver::VersionReq doesn't work for comparing prereleases. Compare with semver::Version instead. For context, see https://github.com/fedimint/fedimint/pull/4804"
  severity: WARNING

