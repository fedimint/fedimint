# This is a basic workflow to help you get started with Actions

name: "Upgrade Tests"

env:
  PERFIT_SERVER: https://perfit.dev.fedimint.org

# Controls when the workflow will run
on:
  schedule:
    # run daily during low usage hours
    - cron:  '30 4 * * *'
  push:
    branches: [ "main", "master", "devel", "releases/v*" ]
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ "main", "master", "devel", "releases/v*" ]
  merge_group:
    branches: [ "main", "master", "devel", "releases/v*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      versions:
        description: 'Versions to test (if empty, uses same as daily run)'
        required: false
        default: ''
      test_kinds:
        description: 'Comma-separated tests to run. Options: fedimintd,fedimint-cli,gateway'
        required: false
        default: ''
        

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    if: github.repository == 'fedimint/fedimint'
    name: "Upgrade tests"
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 120

    steps:
      - uses: actions/checkout@v4
      - name: Prepare
        uses: ./.github/actions/prepare
      - uses: dpc/nix-installer-action@dpc/jj-vqymqvyntouw
      - uses: cachix/cachix-action@v16
        with:
          name: fedimint
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        continue-on-error: true

      - name: Upgrade tests
        run: |
          # read versions from manually triggered workflows
          # default needed for cron or manual workflow without params
          VERSIONS="${{ github.event.inputs.versions }}"
          VERSIONS=${VERSIONS:="v0.5.0 v0.8.1-beta.0, v0.5.1 v0.8.1-beta.0, v0.5.2 v0.8.1-beta.0, v0.6.0 v0.8.1-beta.0, v0.6.1 v0.8.1-beta.0, v0.6.2 v0.8.1-beta.0, v0.6.3 v0.8.1-beta.0, v0.7.0 v0.8.1-beta.0, v0.7.1 v0.8.1-beta.0, v0.7.2 v0.8.1-beta.0, v0.8.0 v0.8.1-beta.0, v0.5.0 v0.5.1 v0.5.2 v0.6.0 v0.6.1 v0.6.2 v0.6.3 v0.7.0 v0.7.1 v0.7.2 v0.8.0 v0.8.1-beta.0"}

          export FM_TEST_CI_ALL_JOBS
          export FM_TEST_UPGRADE_TIMEOUT
          FM_TEST_CI_ALL_JOBS="5"
          FM_TEST_UPGRADE_TIMEOUT="3600"

          # the default tmp dir is too long (/home/ubuntu/actions-runner/_work/_temp/)
          # we need to use `nix develop -c` to be able to use `nix build` inside of backwards-compatibility-test
          # Disable `sccache`, it seems incompatible with self-hosted runner sandbox for some reason, and
          # it doesn't benefit us much here anyway.
          env \
            TMPDIR=/tmp \
            CARGO_PROFILE=ci \
            nix develop -c \
            env -u RUSTC_WRAPPER \
            scripts/tests/run-with-nix-workspace-ci.sh ./scripts/tests/upgrade-test.sh "$VERSIONS"
