# This is a basic workflow to help you get started with Actions

name: "Backwards-Compatibility"

env:
  PERFIT_SERVER: https://perfit.dev.fedimint.org

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch and release tags
  push:
    branches: [ "main", "master", "devel", "releases/v*" ]
    tags:
      - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  pull_request:
    branches: [ "main", "master", "devel", "releases/v*" ]
  merge_group:
    branches: [ "main", "master", "devel", "releases/v*" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# https://stackoverflow.com/questions/66335225/how-to-cancel-previous-runs-in-the-pr-when-you-push-new-commitsupdate-the-curre
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  tests:
    if: github.repository == 'fedimint/fedimint'
    name: "Backwards-compatibility tests"
    runs-on: [self-hosted, linux, x64]
    timeout-minutes: 60

    steps:
      - uses: actions/checkout@v4
      - name: Prepare
        uses: ./.github/actions/prepare
      - uses: dpc/nix-installer-action@dpc/jj-vqymqvyntouw
      - uses: cachix/cachix-action@v15
        with:
          name: fedimint
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
        continue-on-error: true

      - name: Backwards-compatibility tests
        run: |
          VERSIONS_TO_TEST="v0.3.4-rc.1 v0.4.0 v0.4.1 v0.4.2 v0.4.3 v0.4.4 v0.5.0 v0.5.1 v0.5.2-beta.0 v0.6.0 v0.6.1"

          # the default tmp dir is too long (/home/ubuntu/actions-runner/_work/_temp/)
          # we need to use `nix develop -c` to be able to use `nix build` inside of backwards-compatibility-test
          # Disable `sccache`, it seems incompatible with self-hosted runner sandbox for some reason, and
          # it doesn't benefit us much here anyway.
          env \
            TMPDIR=/tmp \
            CARGO_PROFILE=ci \
            nix develop -c \
            env -u RUSTC_WRAPPER \
            scripts/tests/run-with-nix-workspace-ci.sh ./scripts/tests/test-ci-all-backcompat.sh "$VERSIONS_TO_TEST"
