on: [push, pull_request]

name: CI

jobs:
  build_and_unit_test:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          components: clippy, rustfmt
      - uses: Swatinem/rust-cache@v1
      - name: Print toolchain version
        uses: actions-rs/cargo@v1
        with:
          command: version
      - name: Build everything
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --workspace
      - name: Run unit tests
        uses: actions-rs/cargo@v1
        with:
          command: test
          args: --workspace
      - name: Lint code with clippy
        uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: --lib --bins --tests --examples --workspace -- -D warnings
      - name: Lint code with rustfmt
        uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check 
  build_wasm:
    name: Build (wasm32)
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          default: true
          target: wasm32-unknown-unknown
          profile: minimal
      - uses: Swatinem/rust-cache@v1
      - name: Build modules/mint-client
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --target wasm32-unknown-unknown --package mint-client

  build_and_integration_test:
    name: Integration Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: Swatinem/rust-cache@v1
      - uses: cachix/install-nix-action@v15
        with:
          nix_path: nixpkgs=channel:nixos-22.05
      - name: Integration Tests with nix-shell
        run: nix-shell --command ./scripts/integrationtest.sh
  nix-build_test:
    name: Nix-Build Tests
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v16
        with:
          nix_path: nixpkgs=channel:nixos-22.05
      - uses: cachix/cachix-action@v10
        if: github.repository_owner == 'fedimint'
        with:
          name: fedimint
          authToken: '${{ secrets.CACHIX_AUTH_TOKEN }}'
      - run: nix-build
