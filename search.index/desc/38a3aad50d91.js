rd_("AjContains the success value000000000000000ChPay-to-ScriptHash(includes nested wsh/wpkh/sorted multi)0nPay-to-Taproot0B`Database keys used by the clientAbModule-specific DB0CiDatabase handling Core Fedimint database traits and typesA`Path to database0AbDB not really usedAlDatabase for serving the APIAiInstance id of the module0ClReturns a task ID that identifies the task which errored \xe2\x80\xa6ChReturns a task ID that uniquely identifies this task \xe2\x80\xa6AhReturn the federation idCiWaits for the next item in a stream. If the stream is \xe2\x80\xa6CkClient state machine interfaces and executor implementationBiState machine for submitting transactionsChThe list of supported languages. Language support is \xe2\x80\xa6ClThe additionally authenticated data (AAD) for an opening \xe2\x80\xa6AeAdd a vetted gateway.AdPotentially any unitCiSend direct method call to the API. If you specify \xe2\x80\x93\xe2\x80\xa6BdAPI endpoint of one of the guardiansAhContains the error value000000000000000AkGet current consensus valueDj<code>MiniscriptKey</code> that is either a WIF-encoded private key or \xe2\x80\xa6AmLength of the hash, in bytes.0CfThe lowest port number to try. Ports below 10k are \xe2\x80\xa6AeThe maximum duration.CiUpdate the mapping from lightning node public keys to \xe2\x80\xa6BnPay a lightning invoice or lnurl via a gatewayAbPay-to-PubKey-Hash0DcAllows a user to bump the fees of a <code>PendingTransaction</code>0CmRpc commands to the long running devimint instance. Could \xe2\x80\xa6BoPay-to-Witness-ScriptHash with Segwitv0 context0Di<code>S</code> limits the type of state that can be subscribed to the \xe2\x80\xa60ChThe list of supported languages. Language support is \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>ChReturns a reference to the client\xe2\x80\x99s federation API \xe2\x80\xa6AcModule-specific API10CgSupported Api versions for this core consensus versionsCoSupported Api versions for this core &amp; module consensus \xe2\x80\xa610CeURL to the gateway\xe2\x80\x99s versioned public API (e.g. \xe2\x80\xa6BjAPI client impl for mint-specific requestsCjImplements the client API through which users interact \xe2\x80\xa6AhOur server configurationCkModularized Cli for sending and receiving out-of-band ecashAoeasy syntax to create a CommandAjIndex keys due for a checkDcGet a temporary strong reference to <code>ClientContextIface</code>AnGet module data by instance idAkJust-in-time initializationCfAn instance of the HKDF (Hash-based Key Derivation \xe2\x80\xa6CmWallet secret key, can be used instead of config together \xe2\x80\xa6oPeer networkingCbNetworking for mint-to-mint and client-to-mint \xe2\x80\xa6BeConstructs a <code>UnboundKey</code>.BfConstructs a <code>LessSafeKey</code>.CmBuild a new <code>fedimintd</code> with a custom version hashfCreateCnNew empty state to start recovery from, and session number \xe2\x80\xa6EdCreates a new <code>StateTransition</code> where the <code>trigger</code> future \xe2\x80\xa6Ci<code>db</code> and <code>dbtx</code> should be isolated.CbCreate <code>Self</code> from an iterator of pairsDjCreates a new <code>Duration</code> from the specified number of whole \xe2\x80\xa6BjCreate a new <code>BroadcastStream</code>.DoReturns a new <code>TieredMulti</code> with the given <code>BTreeMap</code> mapDjCreates a <code>BufBitcoinReader</code> which will read from the given \xe2\x80\xa6CcCreates a new Fedimint database from any object \xe2\x80\xa6CcCreate a <code>Self</code> by acquiring a lock fileDcBuild a new <code>fedimintdb-tool</code> with a custom version hashAjCreate new module instance0CfHelper function for creating a gateway from either \xe2\x80\xa6DgCreates a new <code>GatewayLdkClient</code> instance and starts the \xe2\x80\xa6ClThe lightning module will charge a non-configurable base \xe2\x80\xa6AjCreate a new text encoder.ClGenerate a request session for a single note and returns \xe2\x80\xa6CnThe mint module will charge a non-configurable base fee of \xe2\x80\xa60AeConstructs a new mintAlCreate new connection limits8CmRun HKDF-extract and keep the resulting pseudo random key \xe2\x80\xa6BnReturns an instant corresponding to \xe2\x80\x9cnow\xe2\x80\x9d.lCurrent timeB`Await more than just one depositCgState machines for out-of-band transmitted e-cash notesCjImplements a connection manager for communication with \xe2\x80\xa6CkPay a Lightning invoice using the gateway\xe2\x80\x99s lightning \xe2\x80\xa6BoInitiates a payment over the Lightning network.ChAttempts to pay an invoice using the lightning node, \xe2\x80\xa6CmRPC used to connect to bitcoind, used for waiting for the \xe2\x80\xa6BdRun the command ignoring its output.CkMain entrypoint into the gateway that starts the client \xe2\x80\xa60BkBlock the thread and run a Fedimintd serverfPanicsAjThreshold Blind SignaturesCmLimits the validity of the announcement to allow updates, \xe2\x80\xa6DhThe peer\xe2\x80\x99s public URL (e.g. <code>wss://fedimint-server-1:5000</code>)BlReturns the API URL of one of the guardians.CeURL to reach an API that we can download configs from2CjA tiny command line tool to fetch BOLT11 invoices from \xe2\x80\xa6CmA raw scriptpubkey (including pay-to-pubkey) under Legacy \xe2\x80\xa60CjJSON-RPC error which can occur when a JSON-RPC call fails.BnThe operation has been completed successfully.CmDump a subset of the specified database and serialize the \xe2\x80\xa6CmImplements the RFC5869 hash based key derivation function \xe2\x80\xa6BeDisplay wallet info (holdings, tiers)CaDisplay high-level information about the gateway.Ce<code>ClientModuleInit</code> of this recovery logic.AkUnique name for this module000DfList all key-value pairs where the key begins with <code>prefix</code>AjList all LNURLs registeredAiList all vetted gateways.kMeta moduleAjFederated mint member mintdNoneBmAn verifiable one time use IOU from the mint.0Aeexample: /transactionBfPrints the seed phrase for the gatewayCnPay an invoice. For  testing  you can optionally specify a \xe2\x80\xa6AgSend e-cash out of bandCmSend funds from the lightning node\xe2\x80\x99s on-chain wallet to \xe2\x80\xa6BaOutput of the SHA1 hash function.B`The decrypted preimage was valid0AgSafely stop the gatewayBkJust start the <code>Client</code> and waitAjPay-to-Witness-PubKey-Hash0AhA duration of zero time.AfCheck auth credentialsAfAuthentication details0CgHashed user password if the API requires authentication0oOur auth stringBkGet the guardian\xe2\x80\x99s authentication detailsB`Get the auth token for API callsCdFinishes building and performs the requested action.CfTLS cert is necessary for P2P auth during DKG and  \xe2\x80\xa6BoTLS certificate for our websocket p2p endpoint#CgFundamental types Fedimint Core API (common) module \xe2\x80\xa6CgThe bcrypt cost factor to use when hashing the passwordBeDatabase tx handle, will be committedAiMark this waiter as done.DcRe-exporting of everything from <code>fedimint_client_module</code>AeEnvironment variablesAlCommon environment variablesAoGateway configured routing feesChFees expressed as an increase over existing peg-out fees0CaFile containing base64 e-cash notes to be decodedBiCombine current state with another recordAoReturns the argument unchanged.00000000000000000000000000000000000000000000000000000CdConstruct the <code>Aad</code> from the given bytesiCreates a new config from the results of a trusted or \xe2\x80\xa622222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222AbHashes some bytes.CkPayment hash which\xe2\x80\x99s corresponding preimage is being soldChHash that can be used to spend the output before the \xe2\x80\xa62CdThis crate implements the RFC5869 hash based key \xe2\x80\xa6C`Display high-level information about the GatewayCaReturns high-level info about the lightning node.CoInitialize a <code>ClientModule</code> instance from its configAeInitialize the module0CkInitialize the logging, must be called for tracing to begin1DdInitialize the <code>DynServerModule</code> instance from its configBnInitialize the module instance from its config103BaCalls <code>U::from(self)</codemReturns an borrowing iteratorAeJoin a new FederationClMap of port ranges. For each range, the key is the first \xe2\x80\xa6AfType/kind of the eventCkGuardian-defined key-value pairs that will be passed to \xe2\x80\xa6AiManagement of meta fieldsCjReturns the meta data of the operation. This is a JSON \xe2\x80\xa6BcGet the value of a given meta fieldCmAdditional config the federation wants to transmit to the \xe2\x80\xa60CkSet LNURL meta data, see LUD-06 for more details on the \xe2\x80\xa6CjLNURL meta data, see LUD-06 for more details on the format3226BbName of the peer, used in TLS auth0AaThe peer\xe2\x80\x99s name1001AaNext port to try.AoNearest key that is not due yetAnThe underlying lightning node.BkGet empty value - meaning no secrets to useAlCreate an <code>Opts</code>.ChPath under which the API endpoint can be reached. It \xe2\x80\xa6ClReturns the id of the guardian from which we got the API \xe2\x80\xa6B`Peer id of the host from the UrlDaRetry until <code>f</code> succeeds or default timeout is reachedBlShorthand for <code>Amount::from_sats</code>0CdSend message to recipient; block if channel is full.ClPay an invoice. For testing you can optionally specify a \xe2\x80\xa6A`Port range size.DiSorts this <code>StructuredPaymentEvents</code> by sorting all of the \xe2\x80\xa6BgRuns a single step of the DKG algorithmDkStops the executor, returning <code>Some(())</code> if the executor was \xe2\x80\xa6BhTask handling, including wasm safe logicCdReturns a reference to the key of the specified tierBfTime handling, wasm safe functionalityAmThe referenced transaction ID0BbBitcoin tx id to bump the fees forAjThe bitcoin transaction ID01AiGeneral purpose utilitiesBfWait for <code>Self::done</code> call.B`Show an audit across all modulesCcThe byte array that represents the hash internally.0lDummy moduleEeRepresents a <code>State</code> that has <code>IsUnset</code> implemented for all \xe2\x80\xa6lEmpty moduleCfShould only be used with freshly generated root secretDfA <code>Metric</code> represents a single numerical value that can \xe2\x80\xa6ClMarker trait that indicates that the member is set, i.e. \xe2\x80\xa6BnPay a lightning invoice or lnurl via a gatewayAjRegister and manage LNURLsAaLnurl subcommandsCeLocally configurable parameters for config generationAiUnique ID of a mint note.0CiDecode a string of ecash notes into a JSON representationC`Encode a JSON string of notes to an ecash stringAnCreate incoming contract offerCjGenerate a new peg-in address to a federation that the \xe2\x80\xa6AkGoing through an Iroh relayAlRetry requests to this peersCcPrepare notes to send to a third party as a paymentCjSplits a string containing multiple e-cash notes (e.g. \xe2\x80\xa6CnBuilder\xe2\x80\x99s type state specifies if members are set or not \xe2\x80\xa6CgImplementors act as state machines that can be executed0CkDerive all wallet descriptors of confirmed UTXOs in the \xe2\x80\xa6CkWrite a key-value pair to the database, overwriting the \xe2\x80\xa6BjAbort the task associated with the handle.mLDK\xe2\x80\x99s AliasB`Show an audit across all modulesCcQueries the database and returns all assets and \xe2\x80\xa6000000000CbBuild a <code>Client</code> and start the executorDoBuild <code>Executor</code> and spawn background task in <code>tasks</code> \xe2\x80\xa6DkBuilds a new client with the provided <code>FederationConfig</code> and \xe2\x80\xa6kClone state0CgReturns the number of bytes successfully written so farAkRandom dummy id for testing0BdConstruct an empty <code>Aad</code>.AeCreate empty metadataAmError returned by the closureBgThe reason the outgoing payment failed.BoThe reason the incoming payment attempt failed.BnThe reason the outgoing payment was cancelled.BfThe reason the incoming payment failedAmGet a reference to the module0jInner dataAnState machines for mint inputsAdLeave the federation0AdGet derivation levelDfDerivation level, root = 0, every <code>child_key</code> increments itChThe LNURL to fetch the invoice from (can be LNURL or \xe2\x80\xa6CmReturn a <code>LocalHistogram</code> for single thread usage.CkContains all configuration that is locally configurable \xe2\x80\xa6CkReturn the network magic bytes, which should be encoded \xe2\x80\xa60AaMajor API version0BdMerges concurrent futures execution.AaMinor API version0BmShorthand for <code>Amount::from_msats</code>0CiNo defined meaning, can be used to send the otherwise \xe2\x80\xa6BoReturn nonce of the e-cash note being requestedAeThe nonce of the note0BaBase64 e-cash notes to be decodedBeOperation log subsystem of the clientCmParse a mnemonic and detect the language from the enabled \xe2\x80\xa6AhEndpoints of all serversC`Get all peer URLs in the <code>InviteCode</code>1AcClient query systemDbRun the supplied closure <code>op_fn</code> until it succeeds. \xe2\x80\xa6CbREST API route for specifying which action to takeBnWaits until <code>duration</code> has elapsed.AbInitialize client.CjStarts the executor, returning a receiver that will be \xe2\x80\xa61AmState machine state interfaceBaThe current state of the Gateway.AgIn-memory state machineChReturns the total number of guardians in the federation.C`Tweak the key with a <code>tweak</code> contract0CkMap <code>gateway_lnrpc</code> protobuf types to rust typesCcReturns an iterator over the words of the Mnemonic.CiRepresents an amount of BTC. The base denomination is \xe2\x80\xa60CkUpload the (encrypted) snapshot of mint notes to federationCnData stored in regular backups so that restoring doesn\xe2\x80\x99t \xe2\x80\xa60BhMake a backup of snapshot of all e-cash.Di<code>fedimint-cli</code> instance (basically path with client state: \xe2\x80\xa6A`Main client type0CdCommon module types shared between client and server0AiReturns the client configmCustom error.AdNo double derivation0ChDecode invite code or ecash notes string into a JSON \xe2\x80\xa6DfDelete a single entry from the database identified by <code>key</code>CmSpins up bitcoind, LDK Gateway, lnd w/ gateway, a faucet, \xe2\x80\xa6CaDerive the wallet descriptor using a single tweakAcDirect connectivityC`Encode an invite code or ecash notes into binaryCnA hashing engine which bytes can be serialized into. It is \xe2\x80\xa60CjDerive all wallet descriptors of tweaks that were ever \xe2\x80\xa6BmSome error happened and the operation failed.ClThe transaction containing the issuance was accepted but \xe2\x80\xa6CgWe are waiting for the gateway to complete the payment.BdGet current consensus value revisionDcRe-exporting of everything from <code>fedimint_client_module</code>DlSomething that can be an <code>DynInput</code> in a <code>Transaction</code>0BiObject-safe version of <code>State</code>0CnInvite code to join the federation by which the e-cash was \xe2\x80\xa6CmThe receiver lagged too far behind. Attempting to receive \xe2\x80\xa6AjLocked version of databaseAhCall a module subcommandBjAny data that modules require consensus onChClaim funds from a gateway federation to an on-chain \xe2\x80\xa6BnType state of the member <code>pre_dkg</code>.BbGlobal request ID used for loggingBbReject unknown module instance idsAhRemove a vetted gateway.AkThe duration of one second.CmSelect an online vetted gateway; this command is intended \xe2\x80\xa6BcOutput of the SHA256 hash function.BcOutput of the SHA512 hash function.AkBitcoin\xe2\x80\x99s signet network.0CjAll possible states this client can submit to the executor0CmShow the status according to the <code>status</code> endpointAlSubmit value change proposalChHelper to wait for actions to be <code>Self::done</code>AmThe amount of e-cash to spendAmAmount to pay, used for lnurlAdBitcoin amount types21CnWhile for now we only support spending the entire contract \xe2\x80\xa6CiAmount for which the user is willing to sell the preimageBnThe amount of out of band ecash being reissuedAjThe amount being depositedAfThe amount to withdrawClThe amount to withdraw. Can be \xe2\x80\x9call\xe2\x80\x9d to withdraw all \xe2\x80\xa6BfThe amount in millisatoshis to requestChCreate a registration from this announcement that is \xe2\x80\xa6CeMostly re-exported for <code>Decodable</code> macros.BdPublic key for our iroh api endpoint0CmConstructs Argon2 with default params, easier if the weak \xe2\x80\xa6CbSerde implementations using hex-encoded encodablesCmWarning: This will expose username &amp; password if present.CmReturns the (little endian) 64-bit integer representation \xe2\x80\xa6mClient backupCmFederation-stored client backups Federation-stored client \xe2\x80\xa6AlBackup a gateway actor stateA`Base 32 encodingAnSimulates mined bitcoin blocksBlBuilt in <code>Client</code>, already joinedAhCore <code>Client</code>nGet the configAhFederation configurationBhDirectory containing server config filesAhFedimint toplevel configClCreate a <code>Client</code> that starts with a fresh state.CjDecodes a base 32 string back to raw bytes. Returns an \xe2\x80\xa6CmCollection of recent scripts from federation history that \xe2\x80\xa6CmReturns the degree of an underlying polynomial to require \xe2\x80\xa6BlRun HKDF-expand to generate new key materialCiEncodes the input bytes as Base32 (hex variant) using \xe2\x80\xa6Dg<code>encode</code> converts a slice of MetricFamily proto messages \xe2\x80\xa6ClSerialize the contract in a deterministic way to be used \xe2\x80\xa60AhConstructs a new engine.0ClA blocks header consists of 40 bytes formed by its index \xe2\x80\xa6CmAs a transaction may have multiple inputs, this refers to \xe2\x80\xa6Cb<code>DynInput</code>s consumed by the transactionCiExtract UTXOs from a database without module partitioningBbThe socket the gateway listens on.B`Gateway webserver listen addressmCommon macrosAgJSON-RPC method to callCaModule selector (either module id or module kind)0BcModule client interface definitionsClExtendable module sysystem Core module system traits and \xe2\x80\xa6DhTo prevent accidental conflicts between <code>kind</code>s, a module \xe2\x80\xa6BlNotify all subscribers of a state transition0DgNotify about <code>key</code> update (creation, modification, deletion)mNotify a key.ClWhether to check with the mint if the notes were already \xe2\x80\xa6AgPeer id of the guardianAoState machines for mint outputsBdPublic key for our iroh p2p endpoint0BcJSON-RPC parameters for the requestAnParameters required by the API0AjParameters for the requestBjReturns the associated network parameters.0B`Simulates the merkle tree proofsCaThe public key of the node to open a channel withCgRandom generation function for the external secret type0ChRenders the Guardian info card with federation name, \xe2\x80\xa6ClGateway Webserver Routes. The gateway supports two types \xe2\x80\xa6nRustls supportDcRe-exporting of everything from <code>fedimint_client_module</code>B`Secret handling &amp; derivationDkCreate a <code>NotifierSender</code> handle that lets the owner trigger \xe2\x80\xa6BgTriggers the distributed key generationB`Returns the status of the serverAkStatus of the peer if knownAmSubmit a meta consensus valueBfTypes handling per-denomination valuesnTiming helpersCiGet <code>DatabaseTransaction</code> to <code>self</code>AeAccessible to clientsAnWill be the same for all peersChReturns true if the signature is valid for the given \xe2\x80\xa6ClVerify the note\xe2\x80\x99s validity under a mit key <code>pk</code>0CiIndicates if this announcement has been vetted by the \xe2\x80\xa60AjWait for a task to finish.ClThe transaction containing the issuance was rejected, we \xe2\x80\xa6ClGet a Bitcoin address from the gateway\xe2\x80\x99s lightning node\xe2\x80\xa6AaMulti-unit amountCjAuthentication uses the hashed user password in PHC formatCnWrapper over <code>T</code> to make it a json request responseEe<code>AmountUnit</code> with id <code>0</code> is reserved for the native Bitcoin \xe2\x80\xa6DgBackoff is an <code>Iterator</code> that returns <code>Duration</code>.A`Mainnet Bitcoin.0CgDescribes a child key of a <code>DerivableSecret</code>B`The payment has been successful.0BoA state machine was created to claim the peg-inCdCombines two or more serialized e-cash notes stringsCiAdditional data made available to state machines of a \xe2\x80\xa60ClThe transaction has been created and potentially already \xe2\x80\xa600CgThe operation has been created and is waiting to be \xe2\x80\xa6CdThe e-cash has been selected and given to the callerCjThe e-cash has been taken out of the wallet and we are \xe2\x80\xa6CmObsoleted, legacy from <code>MintOOBStatesV0</code>, like \xe2\x80\xa6CjIssuance request was created, we are waiting for blind \xe2\x80\xa6CnName of the gateway\xe2\x80\x99s database that is used for metadata \xe2\x80\xa6AbDatabase file nameCeRoot directory where we keep the lock &amp; data fileCdConsensus encoding decoder for module-specific typesCmAllows us to add new items in the future without crashing \xe2\x80\xa6CfUnknown invite code fields to be defined in the futureAcHow we want to voteCjGets the Gateway\xe2\x80\x99s configured configuration for each \xe2\x80\xa6CkThe type erased version of the type implementing this traitBhErrors returned by <code>Timeout</code>.CeAn interface for encoding metric families into an \xe2\x80\xa6AeThe English language.B`The payment request has expired.0BdA non-retryable failure has occurredCmEither a programming error has occurred or the federation \xe2\x80\xa6000CgWe are funding the contract to incentivize the gateway.C`Output of the Bitcoin HASH160 hash function. \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>DmSomething that can be an <code>DynOutput</code> in a <code>Transaction</code>0Dh<code>InPoint</code> represents a globally unique input in a transactionCkMeta source should return fast, retry less. This blocks \xe2\x80\xa6CiA measurement of a monotonically nondecreasing clock. \xe2\x80\xa6BbThe decrypted preimage was invalid0CiCreate a lightning invoice to receive payment via gatewayCnMarker trait that indicates that the member is unset, i.e. \xe2\x80\xa6CiWe are waiting for blind signatures to arrive but can \xe2\x80\xa6CeA value that initializes eagerly in parallel in a \xe2\x80\xa6CfA key identifying a value in the meta module consensusBeThe cryptocurrency network to act on.0BoType state of the member <code>num_feds</code>.BhThe hash of a LN incoming contract offerClClient data initialization might still require some work \xe2\x80\xa6BkThere aren\xe2\x80\x99t enough decryption shares yet0AoWe are waiting for the payment.C`There\xe2\x80\x99s a tx pending (needs more confirmation)CmPrivate for this federation member data that are security \xe2\x80\xa60CfLowercase RFC 4648 Base32hex alphabet (32 characters).CnRequest an invoice. For testing you can optionally specify \xe2\x80\xa6AjReceive e-cash out of bandClShould be used with root secrets provided by the user to \xe2\x80\xa6AlBitcoin\xe2\x80\x99s regtest network.0CmReissue notes received from a third party to avoid double \xe2\x80\xa6AiReissue out of band notesCcJoin federation and restore modules that support itAlUse RocksDB database backend0DjWrapper for <code>Url</code> that only prints the scheme, domain, port \xe2\x80\xa6CaSet the gateway\xe2\x80\x99s lightning or transaction feesBdOutput of the SHA256d hash function.AlReturn the successful resultAkThe payment was successful.0ClWe tried to cancel the operation automatically after the \xe2\x80\xa6BoA default timeout for things happening in testsCnBitcoin\xe2\x80\x99s testnet network. (In future versions this will \xe2\x80\xa60BnGeneric state for both setup and dashboard UIsAgUnknown connection typenUnknown moduleAbReturn our accountBjAssociate the input with a user\xe2\x80\x99s pubkey0BkAssociate the output with a user\xe2\x80\x99s pubkey0AhGenerate deposit addressjLND clientBdThe address of the gateway webserverB`The address to send the funds toBaThe address to withdraw funds to.AgNew API URL to announceBaAPI for secure websocket requestsBbUrl for our websocket api endpointAjURL for our API connectionBlOur API address for clients to connect to usDbReturns the number of <em>whole</em> seconds contained by this \xe2\x80\xa6BjAddress we bind to for exposing the Web UIAjGet a test bitcoin fixtureCiInitialize a client builder that can be configured to \xe2\x80\xa6BgCreates an <code>ExecutorBuilder</code>DfCreates a <code>DecoderBuilder</code> to which decoders for single \xe2\x80\xa6BgDirectory where config files are storedCiAll previous on chain outputs claimed for this peg-in \xe2\x80\xa6EbMap of <code>FederationId</code> -&gt; <code>Client</code>. Used for efficient \xe2\x80\xa6EbCombines this <code>StructuredPaymentEvents</code> with the <code>other</code> \xe2\x80\xa6AfThe command to executeBlOptional comment to include with the paymentClComputes the payment statistics for the given structured \xe2\x80\xa6C`Get the <code>ClientContext</code> for later useBbGet the <code>ClientContext</code>DfGet the decoded <code>T</code> or <code>None</code> if not decoded yetCbReturns the decoder belonging to the server moduleCkReturns a decoder for the following associated types of \xe2\x80\xa6CjDecrypts a <code>ciphertext</code> using <code>key</code>.CdLegacy, state-machine based peg-ins, replaced by \xe2\x80\xa6CbDivides <code>Duration</code> by <code>f32</code>.CbDivides <code>Duration</code> by <code>f64</code>.CmReturns the amount of time elapsed since this instant was \xe2\x80\xa6CfEncrypt <code>plaintext</code> using <code>key</code>.AeGet all meta entries.BgUnix timestamp when this range expires.CnIndicates that this peer needs attention from the operator \xe2\x80\xa6AjHigher-level general error0oGet all secretsClGet the reference to the value, potentially blocking for \xe2\x80\xa6AkReturns the Bitcoin RPC urlCeHandler for the API call that takes the following \xe2\x80\xa6CfThe index of the incoming htlc in the incoming channelAeEncrypted config fileAePlaintext config fileBfConvert into a non-committable versionCaThe secret key for the Iroh <code>Endpoint</code>BcCheck if Waiter was marked as done.CiReturns true if this <code>Duration</code> spans no time.CgModule init params (also contains local params from us)BeModule specific-backup (if supported)AlSecret material from modulesCgAll configuration that needs to be the same for modulesCkSet the params (if leader) or just the local params (if \xe2\x80\xa6BfModules registered with the federationCeMultiplies <code>Duration</code> by <code>f32</code>.CeMultiplies <code>Duration</code> by <code>f64</code>.CeThe Bitcoin network that the Lightning network is \xe2\x80\xa6BoBitcoin network this gateway will be running onCnNetwork to operate on, has to be specified if \xe2\x80\x93cfg isn\xe2\x80\x99\xe2\x80\xa6BgBitcoin network (e.g. testnet, bitcoin)BgThe bitcoin network the client will use10EeCreate <code>JitTry</code> value, and spawn a future <code>f</code> that computes \xe2\x80\xa6CgAdd a single observation to the <code>Histogram</code>.CnAs a transaction may have multiple outputs, this refers to \xe2\x80\xa6AkIndex of the deposit output0BhThe out index of the deposit transactionCnReturns the last state update of the operation, if any was \xe2\x80\xa6Cn<code>DynOutput</code>s created as a result of the transactionC`P2P is the network for running DKG and consensusBbUrl for our websocket p2p endpointAjURL for our P2P connectionCeOur external address for communicating with our peersClEvent-kind specific payload, typically encoded as a json \xe2\x80\xa6AoWhich server to send request toBeGuardian\xe2\x80\x99s own <code>peer_id</code>0Ah<code>PeerId</code> typeBmSimulates pending transactions in the mempoolCk<em><strong>Optional</strong> (Some / Option setters).</em>CdDo not set up federation and stop at a pre-dkg stageCmContains all configuration that will be encrypted such as \xe2\x80\xa6CjAwait the next message; return None if we are shutting \xe2\x80\xa6CnRequest an invoice. For testing you can optionally specify \xe2\x80\xa6BdRemove expired entries from the map.BlJoin a (possibly) previous joined FederationCnRecover the state of the client module, optionally from an \xe2\x80\xa6CfRecovers a client with the provided mnemonic. This \xe2\x80\xa6oWallet recoveryCkIndicates if the client should be recovered from a mnemonicAbRestart the clientClRuns the DKG algorithms with our peers. We do not handle \xe2\x80\xa6CcRuntime (wasm32 vs native) differences handling \xe2\x80\xa6AlSimulates the script historyAcLimit the wait timeCcReturns the summary of number of items in each tierBiAggregate public key for each amount tierCgSecret keys for blind-signing ecash of varying note \xe2\x80\xa60ClAfter how many seconds we will try to reclaim the e-cash \xe2\x80\xa6DcRequires a <code>Future</code> to complete before the specified \xe2\x80\xa61BgThe timeout before attempting to refundCbOptional secret key for our websocket p2p endpointAoOur TLS certificate private keyAcOur TLS private keyCjConverts a consensus-encoded client config struct to a \xe2\x80\xa60AfConvert to seed bytes.CfFuture that will block until a state transition is \xe2\x80\xa60CbHash of the transaction (excluding the signature).C`Bind address for our UI connection (always http)ClActivate usage of Tor as the Connector when building the \xe2\x80\xa6CkActivate usage of Tor (or not) as the connector for the \xe2\x80\xa6CkActivate more verbose logging, for full control use the \xe2\x80\xa6gVersionBfFedimint consensus and API versioning.B`Agreed on core consensus versionClCreate <code>Locked</code> by giving it the database to wrapCkOf the three contract types only the outgoing one needs \xe2\x80\xa6BnThe transaction has been accepted in consensus00CiThe payment has been confirmed and we are issuing the \xe2\x80\xa6iCli errorDc<code>devfed</code> then tests a bunch of the fedimint-cli commandsBbClient initialization was completeBiDo nothing yet, keep waiting for requestsmFund contractCkA contract before execution as found in transaction outputsCiAn object that can be used as a Ricardian contract to \xe2\x80\xa60CcA public-facing newtype over <code>IDatabase</code>DgA <code>Duration</code> type to represent a span of time, typically \xe2\x80\xa6CgAn owned, immutable input to a <code>Transaction</code>CiA type-erased state of a state machine belonging to a \xe2\x80\xa60AlType representing the secret0CiExecutor that drives forward state machines under its \xe2\x80\xa6ClA public key of another user, the lightning payment will \xe2\x80\xa6CgFallback to decoding unknown module instance ids as \xe2\x80\xa6CdA tool for easily writing fedimint integration testsCkThis is an element of $\\mathbb{G}_1$ represented in the \xe2\x80\xa6CkThis is an element of $\\mathbb{G}_2$ represented in the \xe2\x80\xa6AcGateway subcommandsEeA <code>Collector</code> that bundles a set of <code>Gauge</code>s that all share \xe2\x80\xa6AeGenerate a new lnurl.CmHelper struct for registering handlers that are called by \xe2\x80\xa6DcSomething that can be a <code>DynContext</code> for a state machineBjA contiguous range of input/output indexesAjClient initialization modeCmList all invoices and their operation ids generated for a \xe2\x80\xa6BlLanguage to be used for the mnemonic phrase.AcLeave a federation.AdGenerates the moduleoBackup metadataA`A mnemonic code.CiIndex for all the spent e-cash note nonces to prevent \xe2\x80\xa6CmState transition notifier owned by the modularized client \xe2\x80\xa6BhThe number of guardians in a federation.0DiAn encapsulation of <code>FederationId</code> and e-cash notes in the \xe2\x80\xa6Db<code>OutPoint</code> represents a globally unique output in a \xe2\x80\xa6CjThe keypair used to receive payments for ourselves, we \xe2\x80\xa6AnThe payment has been refunded.0ClWe tried to cancel the operation automatically after the \xe2\x80\xa6CkRegister a new LNURL payment code with a specific LNURL \xe2\x80\xa6CkThe transaction has been rejected by a quorum on submission00BbSome units supported by the moduleBcServes the config gen API endpointsCfStop fedimintd after the specified session to do a \xe2\x80\xa6CjBitcoin\xe2\x80\x99s testnet4 network. (In future versions this \xe2\x80\xa60BfPersised only to log that gets trimmedAmAn index of a deposit addressBlExtractor that validates user authenticationCkArbitrary data of the applications integrating Fedimint \xe2\x80\xa6CjVerifies the signatures of e-cash notes, if the online \xe2\x80\xa6BbWithdraw funds from the federationEbComputes the absolute difference between <code>self</code> and <code>other</code>.CdPublic URL from which the webserver API is reachableAfSecret API auth string0AhBind address for our APICmReturns the total number of nanoseconds contained by this \xe2\x80\xa6AbNumber of attemptsCbThe attempt on which the closure returned an errorAnAddress we bind to for the APICbAddress we bind to for p2p consensus communicationBgReturn checksum value for the Mnemonic.DdCheck if <code>range</code> conflicts with anything already reservedAbContract to updateCmThe working directory of the client containing the config \xe2\x80\xa6CgPath to folder containing gateway config and data filesCaPath to folder containing federation config filesCbA set of all decoders of all modules of the clientCmConsensus encoding Binary encoding interface suitable for \xe2\x80\xa6ClThe timestamp to end listing transactions from (e.g., \xe2\x80\x9c\xe2\x80\xa6AaThe Iroh endpointBoNumber of peers to allocate in every federationChUse the blind signature to create spendable e-cash notesClConstruct the HKDF from a pseudo random key that has the \xe2\x80\xa6CmCreate <code>SupportedModuleApiVersions</code> from raw partsEbCreate a <code>tokio::time::Instant</code> from a <code>std::time::Instant</code>.CjDecode a set of out-of-band e-cash notes from a base64 \xe2\x80\xa6CjCreates a hash from its (little endian) 64-bit integer \xe2\x80\xa6DgThis crate provides <code>gatewayd</code>, the Fedimint gateway binary.CiGenerate a new Mnemonic in English. For the different \xe2\x80\xa6CfGet the git hash version of <code>fedimint-core</code>CmWhether the request was authenticated as the guardian who \xe2\x80\xa6BiOur peer id (generally should not change)oOur own peer idCiReturns the identity of the group: the point at infinity.0AfIncoming State MachineCiConvert <code>self</code> into its type-erased equivalentBcConvert the struct to trait object.AeCreate a trait object0CiConvert the value into a <code>std::time::Instant</code>.DhOptional DNS server used for discovery of the Iroh <code>Endpoint</code>BcOptional URL of the Iroh DNS server000AaIs metadata emptyAbIs registry empty?CcVerifies whether all vectors in all tiers are emptyCkReturns true if the error was caused by the task panicking.BaGet the language of the Mnemonic.BlTurn a <code>typed</code> into a dyn versionClReturns the number of guardians that can be evil without \xe2\x80\xa6AoReturns the highest tier amountCkBackup metadata, encoded as <code>key=value</code> (use \xe2\x80\xa6AdApplication metadataCgDerive root secret key from a secret material and salt.ClMap of all peers\xe2\x80\x99 connection information we want to be \xe2\x80\xa6DhReturns a reference to the <code>Notifier</code> that can be used to \xe2\x80\xa6Ck<em><strong>Optional</strong> (Some / Option setters).</em>CbNumber of federations to allocate for the test/runAlPlaintext config file outputAlEncrypted config file outputBkRun the command and get its output as json.CkBind address for our P2P connection (both iroh and tcp/tls)BgParse a mnemonic in the given language.BdGuardian password for authenticationBfThe password that encrypts the configs0CmGuardian password in case authenticated API endpoints are \xe2\x80\xa6CbPassword for authenticated requests to the gateway2ChReturns an iterator over all peer IDs in the federation.CkThe preimage acquired from successfully paying the invoice.CeThe decrypted preimage that was acquired from the \xe2\x80\xa6BaRecurring payment protocol to useC`Register (and wait) for <code>key</code> updatesBlThis registers for notification when called.AgRegistry for config genD`Get a reference back to client module from the <code>Self</code>BjOur config gen settings configured locallyAdShutdown the client.CgTell all tasks in the group to shut down. This only \xe2\x80\xa6BnModules that listed specific units they handleDiIf <code>FM_TEST_DIR</code> is set, use it as a base, otherwise use a \xe2\x80\xa6ClBlock height at which the money will be spendable by the \xe2\x80\xa6BhSplit the config into its distinct partsCiSplit the config into its two functionally distinct parts0ClConverts the JSON into typed version, errors unless both \xe2\x80\xa6EfConverts a <code>Duration</code> to a <code>std::time::Duration</code>, failing if \xe2\x80\xa6CmTry to send message to recipient; drop message if channel \xe2\x80\xa6BjTimestamp in microseconds after unix epochAaPeg-in txo proofsCiCreate an announcement from this registration that is \xe2\x80\xa6CnPublic key of the user that can claim the money back after \xe2\x80\xa6BbReturns the version of this module00CeVersion of the module consensus supported by this \xe2\x80\xa601AiModules handling any unitBcWithdraw from a gateway federation.DcAttempt to withdraw a given <code>amount</code> of Bitcoin to a \xe2\x80\xa6AaApi secret to useBlAwait the final state of the send operation.CfFuture that is <code>Send</code> unless targeting WASMCfStream that is <code>Send</code> unless targeting WASMDfAn error used as a \xe2\x80\x9ccancelled\xe2\x80\x9d marker in <code>Cancellable</code>.AoType of output the cli producesDd<code>Result</code> with <code>CliError</code> as <code>Error</code>BjConsensus parameters for config generationB`Shared consensus-critical configAcCurrent consensuson1CiTool to inspect and manipulate rocksdb databases. All \xe2\x80\xa6CgData which can be encoded in a consensus-consistent wayAdGenerates the moduleChAn owned, immutable output of a <code>Transaction</code>12CnReturns when we obtain the first valid responses. RPC call \xe2\x80\xa6DiA <code>Metric</code> counts individual observations from an event or \xe2\x80\xa6CgA database that on top of a raw database operation, \xe2\x80\xa6ChInterface for the web UI to interact with the config \xe2\x80\xa6BfThe state of the client initializationBeTask failed to execute to completion.ChErrors that can occur during the LNv1 protocol. LNv1 \xe2\x80\xa6ChErrors that can occur during the LNv2 protocol. LNv2 \xe2\x80\xa6CnThe lightning module implements an account system. It does \xe2\x80\xa6CiCreate a lightning invoice to receive payment via gatewayDj<code>MaybeSend</code> is no-op on wasm and <code>Send</code> on non wasm.Dj<code>MaybeSync</code> is no-op on wasm and <code>Sync</code> on non wasm.B`Input for a fedimint transactionDeA value of the <code>MetaKey</code> peers are trying to establish \xe2\x80\xa6BkAll the AEADs we support use 96-bit nonces.ClAn index used to deterministically derive <code>Note</code>sBkEvent that is emitted when a note is spent.CjAn API request error when calling a single federation peer0CiResults from the strategy handling a response from a peerCjThis enum defines the intended recipient of a p2p message.CiThe payment has failed and we are refunding the contract.BfOutput of the RIPEMD160 hash function.CjA list of hops along a payment path terminating with a \xe2\x80\xa6BnSalt backup for combining with the private key0DoRepresents a <code>State</code> that has <code>IsSet</code> implemented for \xe2\x80\xa6ClDecode a setup code (as shared during a federation setup \xe2\x80\xa6BfOutput of the SipHash24 hash function.CjThe issuance was completed successfully and the e-cash \xe2\x80\xa6B`A group of task working togetherCmNot written anywhere, just broadcasted as notification at \xe2\x80\xa6C`Underlying transport failed, in some typical wayCjNetworking error or error on the low-level protocol layer.1CkA key or object containing keys that may be tweaked for \xe2\x80\xa60CmTracks how much bitcoin was sent to an address (doesn\xe2\x80\x99t \xe2\x80\xa6AkThe key\xe2\x80\x99s AEAD algorithm.0CmList of all federation peers for the purpose of iterating \xe2\x80\xa6AiReturns an all zero hash.0ClReturns the total number of whole microseconds contained \xe2\x80\xa6ClReturns the total number of whole milliseconds contained \xe2\x80\xa6BaFlat routing fee in millisatoshisCkBroadcast channel used to send state transitions to all \xe2\x80\xa6CmFlag that can be set by the gateway and allows the client \xe2\x80\xa6ClGet the  cargo package version of <code>fedimint-core</code>BoGet client-specific database with proper prefixCdDatabase keys used throughout the mint client moduleAfCommit the transactionC`Did the future completed successfully (no panic)AfThe same for all peersBfThe actual implementation of consensusClContains all configuration that needs to be the same for \xe2\x80\xa6CmAttempts to create a tx ready to be signed from available \xe2\x80\xa6BaThe peer\xe2\x80\x99s api and p2p endpointAhOur api and p2p endpointBkGet the index of the word in the word list.AbFormatting helpersDfCreates a new <code>Duration</code> from the specified number of days.DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6BkCreate an amount from a number of satoshis.DjCreates a new <code>Duration</code> from the specified number of whole \xe2\x80\xa6CmThe number of nonces we look-ahead when looking for mints \xe2\x80\xa6DjReturns a fixed generator of the group. See <code>notes::design</code> \xe2\x80\xa60BaGet the value for the meta field.nGet global db.CfReturns the fee the processing of this input requires.0CcWe want to provide our own infrastructure to be \xe2\x80\xa6ClThe prefix len of this database refers to the global (as \xe2\x80\xa6AbIs global databaseDkIs this <code>Database</code> a global, unpartitioned <code>Database</code>0Cajsonrpsee/tower rpc layer that collects rpc statsAbLeave a federationCiTry to load the existing state previously stored with \xe2\x80\xa6AfLog an event log eventBgThe max delay of the payment in blocks.CiReturns the isolated database transaction for the module.CgAn empty backup with, like a one created by a newly \xe2\x80\xa6DfA version of <code>Self::new</code> for times where input does not \xe2\x80\xa6DgA version of <code>Self::new</code> for times where output does not \xe2\x80\xa610CiDon\xe2\x80\x99t fetch the registered gateways from the federationCgRegister a hook that will be run after commit succeeds.AgE-Cash note to validateClIncoming contracts are funded exactly once, so they have \xe2\x80\xa6BcParses the host and port from a urlCgPop a someone-elses used deposit address to use a decoyCgImplements recurring payment codes (e.g. LNURL, BOLT12)CmEncryption salt file, otherwise defaults to the salt file \xe2\x80\xa60C`<code>PeerId</code> of the Guardian node, if setCcAccess the nonce as the public key to the spend keyCmSpend key from which the note nonce (corresponding public \xe2\x80\xa61CmRuns DKG, can only be called once after configs have been \xe2\x80\xa6BlStart the distributed key generation processClSubscribe to state transitions belonging to an operation \xe2\x80\xa6CgReturns the number of guardians required to achieve \xe2\x80\xa6CeAdd a threshold, which will log a warning if exceededBhThe number of decryption shares requirediThresholdCbCerts for TLS communication, required for peer \xe2\x80\xa6DfCalculates fee <code>Amount</code> given a payment <code>Amount</code>BnTurn the typed config into type-erased version0BlConverts a contract to its executed version.BmGet a reference to a non-committeable versionBaWarning: This removes the safety.EfAdded in 0.4.2, can be <code>None</code> for old deposits or <code>Some</code> for \xe2\x80\xa6CfKey pair of which the public was used to tweak the \xe2\x80\xa6Ek<code>with_opts</code> creates a <code>Histogram</code> with the <code>opts</code> options.CcReturns an iterator over the words of the Mnemonic.B`The word list for this language.DgWrite out a new file (like <code>std::fs::write</code> but fails if \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>CbAdmin (guardian) identification and authenticationBcUnit of account for a given amount.CgAll requests from client to server contain these fieldsCmApi version supported by a core server or a client/server \xe2\x80\xa60BhWait for a lightning payment to completeCnWe can represent client invite code as a bech32 string for \xe2\x80\xa6BaMeta source can retry infinitely.Bn<code>Nonce</code> but blinded by the user key0BgRegister the gateway with a federation.AaCould not connect0BbThe hash of a LN incoming contractBoA writer counting number of bytes written to itCdUse CursedRedb database backend (hybrid memory/redb)0CbA shared context for a module client state machine0CnA type used by when decoding dyn-types, when the module is \xe2\x80\xa6B`Input for a fedimint transactionCmOrdered, contiguous ID space, which is easy for event log \xe2\x80\xa6BjSimple utility trait to print error chains0CdHandler for a GET request, which must contain no \xe2\x80\xa6BdGet details about a specific invoiceD`The integer version of <code>Counter</code>. Provides better \xe2\x80\xa6ClConfig enabling client to establish websocket connection \xe2\x80\xa6CgDecode an invite code string into a JSON representationCaEncode connection info from its constituent partsCbInformation required for client to join FederationCmMarker trait that indicates that all required members are \xe2\x80\xa6CdAn owned permission to join on a task (await its \xe2\x80\xa6CkThe high-level state of a pay operation over lightning, \xe2\x80\xa6CcLNURL-compliant error response for verify endpointsDeA handle passed to <code>with_lock</code> argument after root was \xe2\x80\xa6BmContains all the configuration for the serverCkReturns the federation\xe2\x80\x99s meta fields. If they are set \xe2\x80\xa6BaOutput for a fedimint transactionDiTrait implemented by every <code>*ModuleInit</code> (server or client \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>AbA type of a module0AoThe duration of one nanosecond.AiFailed to parse the data.CjPay a lightning invoice as the gateway (i.e. no e-cash \xe2\x80\xa6CgList the fedimint transactions that the gateway has \xe2\x80\xa6DaA handle passed to <code>ServerModuleInit::distributed_gen</code>CnA proof about a script owning a certain output. Verifiable \xe2\x80\xa60CdPersisted in both trimmed and untrimmed logs, so \xe2\x80\xa6FeEither <code>legacy_out_point</code> or both <code>txid</code> and <code>out_point_indices</code> \xe2\x80\xa6AoThe type of root secret hashing0DoRepresents a <code>State</code> that has <code>IsSet</code> implemented for \xe2\x80\xa6BkState held by the API after receiving a \xe2\x80\xa6ChAn AEAD key without a designated role or nonce sequence.B`The user has triggered a refund.CmObsoleted, legacy from <code>MintOOBStatesV0</code>, like \xe2\x80\xa6fPanicsCmApi secret, if needed, to use when communicating with the \xe2\x80\xa6CmRuns a closure with a reference to a database transaction \xe2\x80\xa6CgReturn the network\xe2\x80\x99s chain hash (genesis block hash).0BnCheckpoints the database to a backup directoryClThe Fedimint transaction id of the claim transaction. If \xe2\x80\xa6AdCached client configDdComputes hash from <code>bytes</code> in <code>const</code> context.AhDatabase backend to use.0C`Wallet descriptor, can be used instead of \xe2\x80\x93cfgDcEncrypt with a key and turn into <code>EncryptedClientBackup</code>D`Outputs hex into an object implementing <code>fmt::Write</code>.DgCreates a new <code>Duration</code> from the specified number of hours.CdCreates a <code>Network</code> from the magic bytes.0C`Create an amount from a number of millisatoshis.DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6B`Assemble from the distinct partsCcAssemble from the three functionally distinct parts0BgCopies a byte slice into a hash object.0DgCreates a new <code>Duration</code> from the specified number of weeks.AnDatabase for Gateway metadata.CjA public key representing the identity of the gateway. \xe2\x80\xa6CmGet \xe2\x80\x9cactive\xe2\x80\x9d secret - one that should be used to call \xe2\x80\xa6CnRetrieve a client given a federation ID, used for swapping \xe2\x80\xa6CmReturn the module data belonging to the module identified \xe2\x80\xa6ClComputes the median from a slice of sorted <code>u64</code>sCfReturns a reference to the module, panics if not foundCiGet a typed reference to a server module instance by kindBfGet a reference to a global Api handleAmDoes the dbtx have any writesCmIterate the sha256 algorithm to turn a sha256 hash into a \xe2\x80\xa6ClConsumes the join error, returning the object with which \xe2\x80\xa6ClReturns an iterator over every <code>(Amount, &amp;T)</code>AdLast error on commitCnReturned a reference client\xe2\x80\x99s module API client, so that \xe2\x80\xa60BfGet a reference to a module Api handleBfGet the bitcoin network for UI displayBeCreate a client connected to this fedDkCreate a <code>Client</code> that starts with a state that is a copy of \xe2\x80\xa6BhGenerate random <code>OperationId</code>00CmTracker for federation index assignments. When connecting \xe2\x80\xa6ClRun dbtool like it doesn\xe2\x80\x99t know about any module kind. \xe2\x80\xa6CjReturns the number of guardians to select such that at \xe2\x80\xa6BmRun the command and get its output as string.CgReturns the fee the processing of this output requires.0CdSecret key for signing bitcoin multisig transactions0CcPoll until bitcoind rpc responds for basic commandsBcThe public key of the receiving keyCiWrite a someone-elses used deposit address to use a decoyBjReturns route hints to the lightning node.AjSend money to another userBaThe LNURL server to register withBbPeer setup code for setup ceremonyC`Get our connection info encoded as base32 stringC`signatures for all the public keys of the inputsCjDon\xe2\x80\x99t set up new Federation, start from the state in \xe2\x80\xa6CnThe timestamp to start listing transactions from (e.g., \xe2\x80\x9c\xe2\x80\xa6C`Store the current recovery state in the databasefPanicsDcGet the <code>TaskGroup</code> that is tied to Client\xe2\x80\x99s lifetime.CdThe task group for all tasks related to the gateway.CmConvert the mnemonic back to the entropy used to generate \xe2\x80\xa6CkCreates the initial contract outcome that is created on \xe2\x80\xa6CkState transition function that, using the output of the \xe2\x80\xa60CiInsert <code>version</code> to the list of supported APIsBhGet the number of words in the mnemonic.BgEvent log event right after an api call0DaDefinition of an API endpoint defined by a module <code>M</code>.BkTrait which applies to hashes of all types.0CmOperation that can potentially get cancelled returning no \xe2\x80\xa6DhSession type for <code>DatabaseTransaction</code> that is allowed to \xe2\x80\xa6De<code>DatabaseKey</code> that represents the lookup structure for \xe2\x80\xa6BbNamespaces DB keys for this module000BmContains all the configuration for the server0BaOutput for a fedimint transactionClEnvironment variable the specifies the port that the LDK \xe2\x80\xa6DdTrait for converting a fee type to specific <code>Amount</code>, \xe2\x80\xa6DhCommand line parameters for starting the gateway. <code>mode</code>, \xe2\x80\xa6ClGet the total on-chain, lightning, and eCash balances of \xe2\x80\xa6DfImmutable keys for use in situations where <code>OpeningKey</code>/\xe2\x80\xa6CiConnection information sent between peers in order to \xe2\x80\xa6ChMaximum size that a transaction can have while still \xe2\x80\xa6B`The duration of one microsecond.B`The duration of one millisecond.C`Service for managing the caching of meta fields.CcA helper struct meant to combined data from all \xe2\x80\xa6BmEvent that is emitted when a note is created.CfSave notifications to be sent after transaction is \xe2\x80\xa6CkTypes that can be easily converted to <code>NumPeers</code>0BkOpen a channel with another lightning node.DcRe-exporting of everything from <code>fedimint_client_module</code>CkUnique identifier for one semantic, correlatable operation.0CnData needed to pay an invoice, may be the whole invoice or \xe2\x80\xa6BlGets the tagged fedimintd version for a peerCbHandler for a POST request, which must contain \xe2\x80\xa6BbPrint the secret key of the clientBaThe user will pay its own invoiceCnServer returned an internal error, suggesting something is \xe2\x80\xa60BiThe state of the server returned via APIsAgCurrent submitted votesD`An implementation of an <code>Encoder</code> that converts a \xe2\x80\xa6BlRepresents notes of different denominations.CfDecode a transaction hex string and print it to stdoutAoA raw database transaction typeCmThreshold sign the epoch history for verification via the \xe2\x80\xa6CjAn atomic value transfer operation within the Fedimint \xe2\x80\xa6CmOne gateway will pay/receive to/from the other, then they \xe2\x80\xa6AdGenerates the moduleCjPrint the latest Git commit hash this bin. was built with.BdDisplay the version hash of the CLI.CiReturns a reference to the inner hash (sha256, sh256d \xe2\x80\xa600DiReturns the number of seconds contained by this <code>Duration</code> \xe2\x80\xa60BcConfigures which bitcoin RPC to use00G`Returns <code>Some(t)</code> where <code>t</code> is the time <code>self + duration</code> if <code>t</code> \xe2\x80\xa6DoChecked <code>Duration</code> addition. Computes <code>self + other</code>, \xe2\x80\xa6DoChecked <code>Duration</code> division. Computes <code>self / other</code>, \xe2\x80\xa6EeChecked <code>Duration</code> multiplication. Computes <code>self * other</code>, \xe2\x80\xa6G`Returns <code>Some(t)</code> where <code>t</code> is the time <code>self - duration</code> if <code>t</code> \xe2\x80\xa6EbChecked <code>Duration</code> subtraction. Computes <code>self - other</code>, \xe2\x80\xa6CiTest that sets and verifies configurations within the \xe2\x80\xa6AhConnect a new federationBiConnection pool for websocket connectionsCiThe contract ID that uniquely identifies the outgoing \xe2\x80\xa600CiThe contract ID that uniquely identifies the incoming \xe2\x80\xa6BjReturns the number of items in all vectorsAkReturns the number of tiersCmIf we cannot determine the feerate from our bitcoin node, \xe2\x80\xa60BkDelete the recovery state from the databaseCeRun HKDF-expand to generate new key material with \xe2\x80\xa6CkShrthand for setting the short description in the LNURL \xe2\x80\xa6AjEnable iroh for networkingCfAppends metrics to a given <code>String</code> buffer.CeEsplora HTTP base URL, e.g. https://mempool.space/api0Bo<code>format_type</code> returns target format.CiProduces a hash from the current state of a given engine.0DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa60CmCalculate an access code for accessing global_dbtx from a \xe2\x80\xa6CbParse a decimal string as a value in the given \xe2\x80\xa6CnCreates a transaction with the supplied output and funding \xe2\x80\xa60CjCalculate the absolute fee paid to the gateway on success.0CfKey that can unlock contract in case the decrypted \xe2\x80\xa6CjPublic key of the LN gateway allowed to claim the HTLC \xe2\x80\xa6CjGenerate a new Mnemonic in the given language. For the \xe2\x80\xa6CiComputes the average of the given <code>u64</code> slice.CmReturns the balance held by this module and available for \xe2\x80\xa60BfGet balance for a specific amount unitCkEstimates the fee rate for a given confirmation target. \xe2\x80\xa6CnReturns a gateway to be used for a lightning operation. If \xe2\x80\xa6BbGet LN invoice with given settings0CdReturns the Bitcoin network the node is connected toAcGet the guardian IDClReturns a stream no matter if the operation is finished. \xe2\x80\xa6BmRead the invite code from the client data dirClCreate an invite code with the api endpoint of the given \xe2\x80\xa6AfFederation invite codeBeReturn first invite code for gatewaysBhInvite code to connect to the federationBmOptional secret key for our iroh api endpoint00CgThe socket that the gateway listens on for the Iroh \xe2\x80\xa6AkGateway iroh listen addressBmOptional secret key for our iroh p2p endpoint00CmList of additional relays that can be used to establish a \xe2\x80\xa6CgOptional URLs of the Iroh relays to use for registeringBoOptional URLs of the Iroh relays to register on1CkReturns true if the federation is running in a degraded \xe2\x80\xa6DgChecks if the task associated with this <code>JoinHandle</code> has \xe2\x80\xa6CnReturns true if this element is the identity (the point at \xe2\x80\xa60CkReturns true if this point is on the curve. This should \xe2\x80\xa60BmWas the transaction rejected (which is final)Cm<code>true</code> if this state allows no further transitionsBhJoins two sets of events on a predicate.BgDetermine the language of the mnemonic.C`Public routes that are used in the LNv1 protocolC`Public routes that are used in the LNv2 protocolDhMap error into <code>CliError</code> wrapping the original error messageAnMines a given number of blocksChCreates a new Gateway that can be used for module tests.DhLike <code>super::OpeningKey::open_within()</code>, except it accepts anChAttempts to pay an invoice using the lightning node, \xe2\x80\xa6BjRequest the federation prints money for usCeGenerates a B64-encoded random salt string of the \xe2\x80\xa6CgThis is the fee the gateway charges for an incoming \xe2\x80\xa6CnThe txid we are hoping succeeds refunding all notes in one \xe2\x80\xa6DbMake request to a specific federation peer by <code>peer_id</code>0BhDesired retry delay for a single outcomeDcHack to get a route hint that implements <code>serde</code> traits.C`Route hints to reach the LN node of the gateway.CgConsumes the current client and returns a stream of \xe2\x80\xa6CbPassword for authenticated requests to the gatewayAkSession index to stop afterBmConnection info received from other guardiansBmWaits until <code>deadline</code> is reached.EaFetches and removes notes of <em>at least</em> amount <code>min_amount</code> \xe2\x80\xa6CjNumber of e-cash notes that were found to be spent and \xe2\x80\xa6CkThe <code>node_id</code> of the non-target end of the routeCiReturn a <code>HistogramTimer</code> to track a duration.EbConverts a <code>Network</code> to its equivalent <code>bitcoind -chain</code> \xe2\x80\xa60BmReturns the inner hash (sha256, sh256d etc.).00Cjsecp256k1 keys are used for bitcoin deposit addresses, \xe2\x80\xa6B`Hex-encoded fedimint transactionDcRe-exporting of everything from <code>fedimint_client_module</code>CiStructs and interfaces to construct Fedimint transactionsChFedimint transaction (inpus + outputs + signature) typesClAll possible transitions from the current state to other \xe2\x80\xa6BgAll possible transitions from the state10CaCreate two clients, useful for send/receive testsChNonces that we have already used. Used for detecting \xe2\x80\xa6CmLimits the validity of the announcement to allow updates, \xe2\x80\xa6DhGiven a tx created from an <code>WalletOutput</code>, validate there \xe2\x80\xa6BbSetup telemetry through Jaeger \xe2\x80\xa6BgEnable jaeger for tokio console loggingCgMake module generator available when reading the configCdAllow executor being built to run state machines \xe2\x80\xa6AgAdd a module to the fedDfGet <code>DatabaseTransaction</code> isolated to a <code>prefix</code>EeCreate <code>Database</code> isolated to a partition with a given <code>prefix</code>BjA consensus item accepted in the consensusAoSee <code>ActiveStateKey</code>C`Wait for deposit on previously generated addressBjAwait a deposit on a given deposit addressBdWait for incoming invoice to be paidBoAwait the final state of the receive operation.DdBase functionality around <code>IRawDatabase</code> to make it a \xe2\x80\xa6ClOutcome of checking a single deposit Bitcoin transaction \xe2\x80\xa6EcExtension trait to make turning <code>Option</code>s into <code>CliError</code>/\xe2\x80\xa6DkExtension trait making turning Results/Errors into <code>CliError</code>\xe2\x80\xa6AcClient state backupAcTotal client config0CeGets each connected federation\xe2\x80\x99s JSON client configBoUser handle to the <code>Client</code> instance0DcRe-exporting of everything from <code>fedimint_client_module</code>AfFedimint module clientDiError returned by the closure provided to <code>autocommit</code>. If \xe2\x80\xa6CkCommitting the transaction failed too many times, giving upCjThe e-cash has been taken out of the wallet and we are \xe2\x80\xa6CjIssuance request was created, we are waiting for blind \xe2\x80\xa6CgStructure to hold the deserialized structs from the \xe2\x80\xa6AiDeletes all keys startingB`Input for a fedimint transactionCgObject-safe trait for things that can encode themselvesCeThe federation id is a copy of the authentication \xe2\x80\xa6BdAuthentication id for the federation1CmTop level error enum for all errors that can occur in the \xe2\x80\xa6DfA <code>Collector</code> that bundles a set of Histograms that all \xe2\x80\xa6CiTrait that allows interacting with the Bitcoin blockchainCnA trait that the gateway uses to interact with a lightning \xe2\x80\xa6AkRaw database implementationClThe rpc id (e.g. jsonrpc method name) was not recognized \xe2\x80\xa60CfJson value using string representation as db encoding.E`<code>serde_json::Value</code> that must contain <code>kind: String</code> field0B`Server locally configurable fileDk<code>devfed</code> then checks the average latency of reissuing ecash, \xe2\x80\xa6nList channels.AhList registered gatewaysCjModule associated types required by both client and serverDkFor extendability <code>OOBNotes</code> consists of parts, where client \xe2\x80\xa6BjError that could have been returned beforeCcTrigger a recheck for deposits on a deposit addressCmJust ignore this type, it\xe2\x80\x99s only there to make compiler \xe2\x80\xa6CnWhere to receive the payment to, either to ourselves or to \xe2\x80\xa6CeTool to recover the on-chain wallet of a Fedimint \xe2\x80\xa6BdWhatever can go wrong with a requestCjAll the serializable configuration for the fedimint serverBnGets the current fedimint AlephBFT block countC`Gets the current fedimint AlephBFT session countAiDump Client\xe2\x80\x99s Event LogCfConsolidates the setup of server tracing into a helperB`Input for a fedimint transactionBeTest upgrade paths for a given binaryBgWait for all state machines to completeCiA database type that has decoders, which allows it to \xe2\x80\xa6DgReturns a new <code>AbortHandle</code> that can be used to remotely \xe2\x80\xa6AmAdmin (guardian) client typesgExampleAeFedimint ArchitectureCmRun the command expecting an error, which is parsed using \xe2\x80\xa6AiEnable prometheus metricsClBitcoind RPC URL, e.g. http://127.0.0.1:8332 This should \xe2\x80\xa60CkKey to unblind the blind signature supplied by the mint \xe2\x80\xa6DjNot sure why I couldn\xe2\x80\x99t just directly call <code>Box::new</code> ins \xe2\x80\xa6AcTotal burned amountCcTotal amount probably burned due to re-using noncesBiThe source of the Bitcoin blockchain dataBfThe version of the binary code runningBcSanitizes name as valid domain nameCiCreate a new English Mnemonic from the given entropy. \xe2\x80\xa6CmReturns a list of all peers and their respective API URLs \xe2\x80\xa60CmReturns the balance held by this module and available for \xe2\x80\xa60ChReturns a summary of the lightning node\xe2\x80\x99s balance, \xe2\x80\xa6BdGet the client <code>Metadata</code>CeHandle transaction input, adjusting the current stateBmThe initial version that set up the consensusCjReturns true if the error was caused by the task being \xe2\x80\xa6AeIs the dbtx committedBgReturn an iterator over all module dataC`The last version that passed db migration checksDj<code>lightningpay</code> module is needed to suppress the deprecation \xe2\x80\xa6AfLND macaroon file pathoLND RPC addressAfLND TLS cert file pathCjReads the connected federation client configs from the \xe2\x80\xa6AdOur local connectionBiGet the meta manager to read meta fields.EaCreate <code>Database</code> from an already typed-erased <code>IDatabase</code>.AcNew password to setAkClient to join a federationCgOpen a channel with the gateway\xe2\x80\x99s lightning node, \xe2\x80\xa6BkOpens a channel with a peer lightning node.DiOperation this state machine belongs to. See <code>OperationId</code> \xe2\x80\xa6000BhThe operation ID of the outgoing payment0CbThe operation ID of the receive operation to awaitCn<code>OperationId</code> corresponding to this peg-in address.BmReturns the time when the outcome was cached.CmProvide the API url for the guardian directly in case the \xe2\x80\xa6BfMetadata on how to obtain the preimageAfThe HTLC payment hash.CcThe payment hash of the invoice that is being paid.BnThe payment hash of the invoice that was paid.CgThe payment hash of the invoice that failed to be paid.B`The payment hash of the payment.AoThe payment hash of the invoiceAjLightning invoice or lnurl0CkThe set of public keys for blind-signing all peers and note0DjCalled before <code>finalize_dbtx</code>, to allow final state changes \xe2\x80\xa6CeAttempt to increase the fee of a onchain withdraw \xe2\x80\xa6DgAttempt to re-decode raw values with new set of of <code>modules</code>BnSee <code>DynRawFallback::redecode_raw</code>.0CnReturns the auth set on the request (regardless of whether \xe2\x80\xa6DjSelect notes from stream for <code>requested_amount</code>. The stream \xe2\x80\xa6EbSelect notes with <code>requested_amount</code> using <code>notes_selector</code>.CnExecutes an onchain transaction using the lightning node\xe2\x80\x99\xe2\x80\xa6BdSet the client <code>Metadata</code>ClSet a mnemonic from user-provided words Returns an error \xe2\x80\xa6CeSets the password used to decrypt the configs and \xe2\x80\xa6CnAny time executor should notice state machine update (e.g. \xe2\x80\xa6BeLogs to $FM_LOGS_DIR/{name}.{out,err}DfThis is a version of <code>Self::spawn</code> that uses less noisy \xe2\x80\xa6B`The actual amount of ecash spentClNotifies the waiters about the notifications recorded in \xe2\x80\xa6DaReturns the fractional part of this <code>Duration</code>, in \xe2\x80\xa6BoTypes handling multiple per-denomination valuesDcReturns the total value of all notes in msat as <code>Amount</code>0CmDenomination of which e-cash nonces were found to be used \xe2\x80\xa6BjReturns once the current session completesBoReturns an iterator over Mnemonic word indices.CgSet of api versions for each component (core + modules)CjIndex for all the previously used blind nonces. Just a \xe2\x80\xa6AiClient configuration fileCiUsed to configure, assemble and build <code>Client</code>0CoA Client context for a <code>ClientModule</code> <code>M</code>DkA helper for tracking and logging on <code>Drop</code> any instances of \xe2\x80\xa6AmTODO: rename, or even remove?CkAll the items that may be produced during a consensus epochCgCreate an invoice to receive lightning funds to the \xe2\x80\xa6CmA mint inputs bundle was submitted as a part of a general \xe2\x80\xa6De<code>DatabaseValue</code> that represents the value structure of \xe2\x80\xa6Dk<code>CoreMigrationFn</code> that modules can implement to \xe2\x80\x9cmigrate\xe2\x80\x9d\xe2\x80\xa6BaOutput for a fedimint transactionBaSnapshot of a ecash state (notes)CcHas the context necessary for serving API endpointsC`Type-erased version of <code>ClientModule</code>CeInterface for guardian dashboard API in a running \xe2\x80\xa6CeThe first index that the gateway will assign to a \xe2\x80\xa6CiAllows to connect to peers and to listen for incoming \xe2\x80\xa6AmBackend side module interfaceDcThe integer version of <code>CounterVec</code>. Provides better \xe2\x80\xa6ClThe request was addressed to an invalid <code>peer_id</code>0CkHelper struct indicating if an invoice was paid. In the \xe2\x80\xa6BnLast valid backup the client attempted to makeAoBuilder for <code>Locked</code>DhMaximum size of a <code>MetaValue</code> More than 1MB would lead to \xe2\x80\xa6CdParameters necessary to generate this module\xe2\x80\x99s \xe2\x80\xa60ClState machine managing e-cash that has been taken out of \xe2\x80\xa6CjAdditional resources made available in this module\xe2\x80\x99s \xe2\x80\xa60CiDefines a strategy for selecting e-cash notes given a \xe2\x80\xa6AjThe state of Notification.CeEvent that is emitted when ecash is spent out of bandBjOptional stacktrace formatting for errors.CiConnection information sent between peers in order to \xe2\x80\xa6CjKills process when all references to ProcessHandle are \xe2\x80\xa6AmData needed to pay an invoiceAgFedimint query strategyDj<code>devfed</code> then kills and restarts most of the Guardian nodes \xe2\x80\xa6BhThe background task has been terminated.BmA function/closure type for handling setup UIChThe high-level state of a raw e-cash spend operation \xe2\x80\xa6DgA <code>Note</code> with associated secret key that allows to proof \xe2\x80\xa6CnThe timeout of this out-of-band transaction was hit and we \xe2\x80\xa60CfA transaction id for peg-ins, peg-outs and reissuances0BmContains all the configuration for the serverBaOutput for a fedimint transactionBgSummary of the coins within the wallet.0Ce<code>devfed</code> then spawns faucet for wasm testsClIf the exact amount cannot be represented, return e-cash \xe2\x80\xa60BhAPI endpoints for each federation member0BmNetwork addresses and names for all peer APIs1CiReturns a list of custom API endpoints defined by the \xe2\x80\xa60CaReturns a reference to the underlying byte array.0ChReturns the number of milliseconds contained by this \xe2\x80\xa60CmAwaits the outcome of the operation update stream, either \xe2\x80\xa6CiBuild a <code>Client</code> but do not start the executorCnUse the gateway\xe2\x80\x99s lightning node to send a complete HTLC \xe2\x80\xa6ChUse the gateway\xe2\x80\x99s lightning node to complete a paymentCjCompletes an HTLC that was intercepted by the gateway. \xe2\x80\xa6CgDisplay high-level information about the Gateway configCgCreate a backup, include provided <code>metadata</code>DiCreates a mint output close to the given <code>amount</code>, issuing \xe2\x80\xa6BhTime the address was allocated (created)CmIterates through all the specified ranges in the database \xe2\x80\xa6BfDumps all database items for debugging0ChReads and serializes structures from the Gateway\xe2\x80\x99s \xe2\x80\xa6ChReads and serializes structures from the gateway\xe2\x80\x99s \xe2\x80\xa6212Cl<code>Err</code> if <code>Self::is_global</code> is not true0CeReturns the federation\xe2\x80\x99s ID that can be used to \xe2\x80\xa6BdFederation id of the e-cash to spendCgFederation ID in which the invoices should be generatedAeFedimint Core libraryB`Fees charged for LN transactionsBcFees charged for ecash transactions0DaFees to be charged for deposits and withdraws <em>by the </em>\xe2\x80\xa6AmFees for bitcoin transactions10CkFinalize the recovery converting the tracked state to finalCcHandle session outcome, adjusting the current stateCaCreate an amount from a number of whole bitcoins.DkConverts a <code>bitcoind -chain</code> argument name to its equivalent \xe2\x80\xa60BhCalculate next actions from the databaseCcCreates this wrapper type from the inner hash type.00DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa60CjBackup id derived from the root secret key (public key \xe2\x80\xa6AmRead a part of the event log.BcReturns a list of guardian API URLsDaGet module data by instance id, including <code>ModuleKind</code>CfHandle transaction output, adjusting the current stateEbConvert to type implementing <code>IRawDatabase</code> into <code>Database</code>.DiConvert an iterator of anything into <code>FallibleIterator</code> by \xe2\x80\xa600000000000000000000CdVerify the invariant: sorted by unique major numbersBmCreate a link to the test dir under this pathCiLists the lightning node\xe2\x80\x99s active channels with all \xe2\x80\xa6CjReturns all gateways that are currently in the gateway \xe2\x80\xa6BjInvoice comment/description, used on lnurl0AbCreate a sub-groupCk<em><strong>Optional</strong> (Some / Option setters).</em>CnMigrates a particular state by looping over all active and \xe2\x80\xa6ChMigrates the database from version 0 to version 1 by \xe2\x80\xa6C`Example DB migration from version 0 to version 1CgMigrate to v1, backfilling all previously pegged-in \xe2\x80\xa6CkIntroduced in v0.5, there is a db key clash between the \xe2\x80\xa6BkCreate a new admin api for the given PeerIdCaCreates a token without verifying authentication.CeNote index to derive next note in a given amount tierCfRun degraded federation with FM_OFFLINE_NODES shutdownDkLike <code>super::OpeningKey::open_in_place()</code>, except it accepts \xe2\x80\xa6BlSee <code>ServerModule::output_status</code>00000Dn<strong>Deprecated</strong>: Modules should not be using it. Instead, they \xe2\x80\xa6111ChProvides an abstract network connector interface and \xe2\x80\xa6CcNetwork addresses and names for all p2p connectionsBoThe payment image of the invoice that was paid.BmThe payment image of the invoice that failed.1BlThe payment image of the invoice that failed2CgThis should always be 0 if everything is okay, so a \xe2\x80\xa6CkPeg-in monitor: a task monitoring deposit addresses for \xe2\x80\xa6CnTry to spend a transaction input. On success all necessary \xe2\x80\xa6000000000DjRetrieves the <code>PublicKey</code> of the Gateway module for a given \xe2\x80\xa6mGet key valueCmCreates the webserver\xe2\x80\x99s routes and spawns the webserver \xe2\x80\xa6DkRetrieves a <code>ClientHandleArc</code> from the Gateway\xe2\x80\x99s in memory \xe2\x80\xa60CnSession count taken right before taking the backup used to \xe2\x80\xa6BdGet the current active session countCjBegins the task for listening for intercepted payments \xe2\x80\xa6BiSee <code>Executor::stop_executor</code>.CgStops the background task that runs the state machines.DgReturns the fractional part of this <code>Duration</code>, in whole \xe2\x80\xa60BbReturns the underlying byte array.0CeSerializes this element into compressed form. See \xe2\x80\xa60CkConverts the value to a JSON value, ignoring invalid utf-8.CdAttempt to deserialize metadata as untyped json (\xe2\x80\xa6AkCreate a Schnorr public keyCkWe definitely don\xe2\x80\x99t want leading/trailing newlines in \xe2\x80\xa6Ck<code>ToString::to_string</code>, but without panic on OOM.00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000BhUpload <code>backup</code> to federationCbThe function asserts that the ciphertext is valid.AhThe Gateway\xe2\x80\x99s API URL.BoReturns once all active state machines completeChClient that can has wallet initialized, can generate \xe2\x80\xa6DjUse for displaying potentially large <code>[serde_json::Value]</code>s \xe2\x80\xa6C`A state that is able to make progress eventuallyAdAdvance the note_idxCkA peg-in transaction was already claimed (state machine \xe2\x80\xa6BoEvent log event right before making an api call0Af\xe2\x80\x9cApi Request Hook\xe2\x80\x9dBgAllow early refund of outgoing contractCjChange guardian password, will shut down fedimintd and \xe2\x80\xa6ChTotal client config v0 (&lt;0.4.0). Does not contain \xe2\x80\xa6B`Type of the connection to a peerDkA key that can be used to query one or more <code>DatabaseRecord</code> \xe2\x80\xa6CkA key + value pair in the database with a unique prefix \xe2\x80\xa6CnGenerate a new deposit address, funds sent to it can later \xe2\x80\xa6CdParameters necessary to generate this module\xe2\x80\x99s \xe2\x80\xa6EeA type that decodes <code>module_instance_id</code>-prefixed <code>T</code>s even \xe2\x80\xa6BgEmpty struct for if there are no params2CeInformation about one of the feds we are connected toBnTest fixture for a running fedimint federationCcA contract after execution as saved in the databaseAlGet value change submissionsBgRestore guardian from downloaded backupBaSee <code>InactiveStateKey</code>CnSomething about the request we\xe2\x80\x99ve sent was wrong, should \xe2\x80\xa60DfFor extendability <code>InviteCode</code> consists of parts, where \xe2\x80\xa6CcList details for a specific invoice by operation idBfJoin a federation using its InviteCodeCcJoin federation (requires mnemonic to be set first)ClThe high-level state of a reissue operation started with \xe2\x80\xa6BkErrors that might be returned by the serverChHelper function definition for migrating a single state.ClState transition notifier for a specific module instance \xe2\x80\xa60DcModule Registry hold module-specific data <code>M</code> by the \xe2\x80\xa6CfNumber of buckets used for <code>Notifications</code>.CnA backup type for modules without a backup implementation. \xe2\x80\xa6DkSession type for a <code>DatabaseTransaction</code> that is not allowed \xe2\x80\xa6CnNotifier send handle that can be shared to places where we \xe2\x80\xa6BbServer encrypted private keys fileBgList a payment summary for the last dayDhA database that wraps an <code>inner</code> one and adds a prefix to \xe2\x80\xa6CkRefunded multiple notes in a single tx, if fails, switch toCcThe error returned when registering a method or \xe2\x80\xa6oRequest timeoutCjThis is the maximum send fee of one and a half percent \xe2\x80\xa6CmItems ordered in a single session that have been accepted \xe2\x80\xa6CiRestarted setup. All peers need to sync on this state \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>0B`Clients reused for upgrade testsCaWait for the fed to reach a consensus block countBlWallet client module recovery implementationgExampleAoGet a server bitcoin RPC configCnBuilder struct that allows the gateway to build a Fedimint \xe2\x80\xa6CnGenerate a SHA256 hash of the consensus encoding using the \xe2\x80\xa6CdReturns the consensus hash for a given client config0CiRequests the lightning node to create an invoice. The \xe2\x80\xa6DhLike <code>Self::decode_complete</code> but does not verify that all \xe2\x80\xa6CfWe don\xe2\x80\x99t want to hold any money or sign anything \xe2\x80\xa6CnReturns the amount of time elapsed from another instant to \xe2\x80\xa6B`Reads encrypted data from a fileDnExchanges a <code>DkgPeerMsg::Module(Vec&lt;u8&gt;)</code> with all peers. \xe2\x80\xa6DdConvert into the decoded <code>T</code> and panic if not decoded yetCaDerive a federation-ID-based child key from self.BaBIP39 client secret support crateAfFedimint build scriptsChHow many bitcoin blocks to wait before considering a \xe2\x80\xa6CiConfirmations required for a peg in to be accepted by \xe2\x80\xa610CjZero cost conversion between a fixed length byte array \xe2\x80\xa60000000000000ChGenerate an lnurl for the client. You can optionally \xe2\x80\xa6BhReturns the block hash at a given heightCmReturns a transaction with the provided txid if it exists \xe2\x80\xa6BfReturn accumulated sum of all samples.DgReturns the setup code if <code>set_local_params</code> was already \xe2\x80\xa6BgGet a map of peer IDs to guardian namesCkChecks if the requested route is authenticated and will \xe2\x80\xa6CcHandle session outcome, adjusting the current stateCjHashes the given data with an engine with the provided \xe2\x80\xa6BdCreate a <code>HistogramOpts</code>.CmThis is a helper macro that generates the implementations \xe2\x80\xa6CkIf the necessary information to join the federation the \xe2\x80\xa60CmBoolean that indicates if the invite code was included in \xe2\x80\xa6BmThe amount of the invoice that is being paid.BdThe amount specified in the invoice.BdThe amount requested in the invoice.0BnPublic keys for all iroh api and p2p endpointsCmDetermines if the payment can be completed using a direct \xe2\x80\xa6EcCheck if env variable is set and not equal <code>0</code> or <code>false</code> \xe2\x80\xa6CkThe mode that specifies the lightning connection parametersAiLDK lightning server portClTest that verifies the various liquidity tools (onchain, \xe2\x80\xa6AlRead the finalization statusCmMake the underlying instance act as if it was exclusively \xe2\x80\xa6BeTurn a typed input into a dyn versionD`MaybeSync can not be used in <code>dyn $Trait + MaybeSend</code>Ck<em><strong>Optional</strong> (Some / Option setters).</em>DdOpen or create a <code>Client</code> that starts with a fresh state.BgOur id (might change if new peers join)CnInititates multiple peg-ins to the same federation for the \xe2\x80\xa6CkNext nonces that we expect might soon get used. Once we \xe2\x80\xa6DhPrints the contents of the <code>BTreeMap</code> to a pretty JSON stringCkTry to create an output (e.g. issue notes, peg-out BTC, \xe2\x80\xa6000000000AoPublic key shares for each peerCmRemoves the gateway\xe2\x80\x99s registration record. First checks \xe2\x80\xa6CfRemoves the gateway registration record. First the \xe2\x80\xa6EbSaturating <code>Duration</code> addition. Computes <code>self + other</code>, \xe2\x80\xa6EhSaturating <code>Duration</code> multiplication. Computes <code>self * other</code>, \xe2\x80\xa6EeSaturating <code>Duration</code> subtraction. Computes <code>self - other</code>, \xe2\x80\xa6DiSelects a Lightning Gateway from a given <code>gateway_id</code> from \xe2\x80\xa6CnStarts the background thread that runs the state machines. \xe2\x80\xa6CiConversion function from the external encoding to the \xe2\x80\xa60CiFedimint transaction id in which the deposit is being \xe2\x80\xa6ClConsumes the join error, returning the object with which \xe2\x80\xa6CnTweak a user key with an index, this is used to generate a \xe2\x80\xa6CkValidate the given notes and return the total amount of \xe2\x80\xa6CeWait until the server is able to respond to requests.AmWaits for key to be notified.AgAdd a filter directive.DhA wrapper that causes the inner <code>T</code> to be debug-formatted \xe2\x80\xa6CaError returned when the autocommit function failsDgA wrapper around <code>tokio::sync::broadcast::Receiver</code> that \xe2\x80\xa6Gb<code>Result</code> with <code>CliError</code> as <code>Error</code> and <code>CliOutput</code> as <code>Ok</code>BhKey used to store user\xe2\x80\x99s ecash backupsCjAn alias for a reference counted <code>ClientHandle</code>0BmSome condition on the response this not match0AlWe failed running config genCcAll the parameters necessary for generating the \xe2\x80\xa6BcRuns the main server consensus loopClOutcome of a contract. Only incoming contracts currently \xe2\x80\xa6BmDefault Bitcoin network for testing purposes.BlAn iterator over the variants of DbKeyPrefix000000000000000000CdA secret that can have child-subkey derived from it.CnDiscover the common api version to use to communicate with \xe2\x80\xa6BcExample old version 0 of DB entriesBhLookup funds for a user by key or prefixBkErrors that might be returned by the serverBbLookup tx outputs by key or prefixCgAn owned, immutable input to a <code>Transaction</code>2ClBuilder to which module clients can be attached and used \xe2\x80\xa6AnSpins up bitcoind and esplora.BcEnv var to override iroh DNS serverAoOverride LDK\xe2\x80\x99s Lightning portCfAn API request error when calling an entire federation0EeA wrapper with <code>fmt::Display</code> for any <code>E : Error</code> that will \xe2\x80\xa60CmConnection manager that tries to keep connections open to \xe2\x80\xa6CeAn extension trait with convenience operations on \xe2\x80\xa6DbA type that has a <code>Dyn*</code>, type erased version of itselfClThe endpoint specification for the peer is invalid (e.g. \xe2\x80\xa60CfSomething about the response was wrong, should not \xe2\x80\xa60DkThe lnurl-rs crate doesn\xe2\x80\x99t have the <code>verify</code> field in this \xe2\x80\xa6ClAfter how many attempts a DB transaction is aborted with \xe2\x80\xa6CjMaximum size, in bytes, of data we are allowed to ever \xe2\x80\xa6C`Locally unencrypted config unique to each memberB`Contains the types defined aboveBkErrors that might be returned by the serverChState machine managing the e-cash redemption process \xe2\x80\xa6CnMultiple, disjoint, minimum required or maximum supported, \xe2\x80\xa60CiTwo clients will pay to each other using the same gatewayCnFixture implementing bitcoin node under test by talking to \xe2\x80\xa6CcRefunded note via multiple single-note transactionsCiSubmit a change of value for a given key. Guardians only.CiRepresents one or multiple possible state transitions \xe2\x80\xa60C`TCP connector with encryption and authenticationDcRe-exporting of everything from <code>fedimint_client_module</code>C`A transaction output, either unspent or consumed01B`The user has triggered a refund.BeWe have verified all our peer configsChEvent that is emitted when the client pegs-out ecash \xe2\x80\xa6CjMiddleware to authenticate an incoming request. Routes \xe2\x80\xa6BeThe bitcoin network of the federationAnGet the url of the bitcoin rpcC`Legacy serde encoding for <code>bls12_381</code>DiCopied from <code>tokio_stream</code> 0.1.12 to use our optional Send \xe2\x80\xa6ClThe bitcoin transaction is saved as soon as we see it so \xe2\x80\xa60CkChange the password used to encrypt the configs and for \xe2\x80\xa6CfConnects a gateway to this <code>FederationTest</code>BdGet list of names of connected peersBkGet the connection type for a specific peerBcThe amount offered in the contract.DkCreates a backup database in the <code>snapshot_dir</code> according to \xe2\x80\xa6BnGet and create if doesn\xe2\x80\x99t exist the data dirCnBackfill DB fix for bug that caused \xe2\x80\x9choles\xe2\x80\x9d in invoice \xe2\x80\xa6EaDecodes a specific <code>DynType</code> from the <code>reader</code> byte stream.DdGet decoders for <code>modules</code> and fail if any is unsupported0ChDefault timeout for e-cash redemption of one week in \xe2\x80\xa6CfGenerates configs for all peers in an untrusted manner00BfRuns the distributed key gen algorithm1FbWrite <code>data</code> encrypted to a <code>file</code> with a random <code>nonce</code> that \xe2\x80\xa6Ch<code>Err</code> if <code>Self::is_global</code> is true0CmReturns the json error if the command has a non-zero exit \xe2\x80\xa6BaFederation name set by the leaderBmFederation name from config metadata (if set)101AgGet the federation namenClient libraryBbServer side fedimint module traitsCaConstructs a hash from the underlying byte array.0DhCreates a <code>Network</code> from the chain hash (genesis block hash).0CeAttempts to deserialize a compressed element. See \xe2\x80\xa60ClCreate a new Mnemonic in the specified language from the \xe2\x80\xa6DdCreates a new <code>Duration</code> from the specified number of \xe2\x80\xa6CkThis function is mostly meant for internal use, you are \xe2\x80\xa60C`Returns the total number of blocks in the chain.AoReturns the current block count0C`Returns the config of the client in JSON format.CdGet metadata value from the federation config itselfClWhen a port is specified in the Esplora URL, the esplora \xe2\x80\xa6ChGet the invite code for the federation guardian. For \xe2\x80\xa6ClReturns an invite code for the federation that points to \xe2\x80\xa6AfReturns a new address.B`Get errors from different peers.CkGet current submissions to change the meta consensus value.CmGet a transaction by its txid. Checks the mempool and all \xe2\x80\xa6ChReturns a proof that a tx is included in the bitcoin \xe2\x80\xa6ClReturns information about the Gateway back to the client \xe2\x80\xa60AhThe incoming HTLC expiryBoBuilt-in, default, internal <code>Client</code>DaReturns an consuming iterator over every <code>(Amount, T)</code>CkCheck if this invoice was created using LNv1 and if the \xe2\x80\xa6ChReturns true if this point is free of an $h$-torsion \xe2\x80\xa60AkClient to join a federationCcLast time the client checked the address for peginsBfTurn a typed output into a dyn versionE`Map error into <code>CliError</code> using custom error message <code>msg</code>BhMaximum number of concurrent connectionsBgHow many API connections we will acceptCmCreate a new notifier for a specific module instance that \xe2\x80\xa6DhCreates a new <code>FederationTestBuilder</code> that can be used to \xe2\x80\xa6ChWe always keep track of an incrementing index in the \xe2\x80\xa6CdCreate a fake bitcoin transaction with given outputsCkNext time client is going to checked the address for peginsCiWaits for the next item in a stream. If the stream is \xe2\x80\xa6CfThe number of route hints to include in LNv1 invoices.BkNumber of route hints to return in invoicesAiReturn all online PeerIdsCnThe timestamp that the operation begins, including the API \xe2\x80\xa6CjThe timestamp that the operation begins, including any \xe2\x80\xa6ClInitiates multiple peg-outs from the same federation for \xe2\x80\xa6CbNonces that we track that are currently spendable.CnUse a broken printer to print a liability instead of money \xe2\x80\xa6AlAdd a module to the registryDhPerform a swap from an LNv2 <code>OutgoingContract</code> to an LNv1 \xe2\x80\xa6BlDesired retry delay for a bunch of outcomes.ClReturns payment information that LNv2 clients can use to \xe2\x80\xa60CmInstructs this gateway to pay a Lightning network invoice \xe2\x80\xa6BjAtomic BFT unit containing consensus itemsClThe notes we are going to refund individually if it doesn\xe2\x80\xa6BnAll UTXOs available as inputs for transactions0CiReads the configs from the disk, starts the consensus \xe2\x80\xa6AiStore finalization statusCjGenerate a pseudo-random byte array from the derivable \xe2\x80\xa6CgSerializes this element into uncompressed form. See \xe2\x80\xa60BoValidate backup before sending it to federationCbThe function asserts that the ciphertext is valid.BdWait for next change in this source.BhWaits for key to be present in database.0CkSets the log level applied to most modules. Some overly \xe2\x80\xa6CdAllow executor being built to run state machines \xe2\x80\xa6CjGet words from the word list that start with the given \xe2\x80\xa6CkSomething that can be debug-formatted in an abbreviated wayCjAwait a LNURL-triggered lightning receive operation to \xe2\x80\xa6BgServer needs a password to read configsCfShow statistics about client backups stored by the \xe2\x80\xa6CaStatistics about backups stored in the federationBaConfiguration for the bitcoin RPCCiWrap buffering support for implementations of Read. A \xe2\x80\xa6BgServer consensus-only configurable fileClLogic and constant common between server side and client \xe2\x80\xa6BoConfiguration for connection and request limitsAdConsensus is runningCbThe meta module was built with flexibility and \xe2\x80\xa6CjFlag indicating whether user-visible serializations of \xe2\x80\xa60CmEvent that is emitted when the client confirms an onchain \xe2\x80\xa6C`Locally unencrypted config unique to each memberB`Contains the types defined aboveBkErrors that might be returned by the serverDjAn owned, immutable output of a <code>Transaction</code> before it was \xe2\x80\xa621AjThe alias for the LDK NodeCmAn extension trait allowing to making federation-wide API \xe2\x80\xa6BaA final, fully initialized clientCcSimple utility trait to print error chains (for \xe2\x80\xa60ChState machine that executes the Lightning payment on \xe2\x80\xa6CmAllows to connect to peers. Connections are request based \xe2\x80\xa6CnAn interface between module implementation and the general \xe2\x80\xa60CbA UTXO with its Bitcoin Core importable descriptorBhA past or final state of a state machineC`Specialized smart contract for incoming paymentsCkState machine that executes a transaction between two usersD`Like <code>InitMode</code>, but without no longer required data.ClThe high-level state of an pay operation internal to the \xe2\x80\xa6AcInvalid request ID.CkClient config that cannot be cryptographically verified \xe2\x80\xa6CkLegacy non-meta module config source uses client config \xe2\x80\xa6CfRepresents an active connection to the lightning node.CaInformation a gateway registers with a federationCkList the Lightning transactions that the Lightning node \xe2\x80\xa6Ec<code>devfed</code> then calls binary <code>fedimint-load-test-tool</code>. See \xe2\x80\xa6BmContains all the configuration for the clientAdTracks a transactionCjRepresents the amounts of issued (signed) and redeemed \xe2\x80\xa6DhThe <code>MintClientModule</code> is responsible for handling e-cash \xe2\x80\xa6CnState machine managing the e-cash issuance process related \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>AbModule instance ID0CnSend a notification to tasks waiting to be notified if the \xe2\x80\xa6ChEvent that is emitted when out of band ecash is reissuedCnRepresents the outcome of an operation, combining both the \xe2\x80\xa6CaSpecialized smart contract for outgoing payments.AhProgress of the recoveryCgTime we will wait before forcefully shutting down tasksBmModule Generation trait with associated types0CdParameters necessary to generate this module\xe2\x80\x99s \xe2\x80\xa6CcConfig is generated, peers should verify the configDiFor the given <code>OperationId</code>, this function will wait until \xe2\x80\xa60CnQuery via btc rpc for a history of an address derived with \xe2\x80\xa6CkContacts the mint and checks if the supplied notes were \xe2\x80\xa6BjCheck if an e-cash note was already spent.CkThis function is mostly meant for internal use, you are \xe2\x80\xa60CoAttempts to commit the dbtx or returns an <code>ApiError</code>BmConnection pool for next endpoint connectionsC`Serialization function for the external encoding0ClEncode an object with a well-defined format. Returns the \xe2\x80\xa6EcGenerate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>EdDivides <code>Duration</code> by <code>Duration</code> and returns <code>f32</code>.EdDivides <code>Duration</code> by <code>Duration</code> and returns <code>f64</code>.BhConverts metrics to <code>String</code>.CjReturns the expiry timestamp in seconds since the UNIX \xe2\x80\xa6CkTime at which the invoice expires in seconds since unix \xe2\x80\xa6B`Get the federation audit summaryCmUnique per-federation identifier assigned by the gateway. \xe2\x80\xa6BkConstants for categorizing the logging typeBmFormat the type of consensus item for displayCjGenerate a new Mnemonic in the given language with the \xe2\x80\xa6ClReturns a reference to a typed module client instance by \xe2\x80\xa6CjGet the project root (relative to closest Cargo.lock file)0AcGet a random nonce.CfRetrieves the federation\xe2\x80\x99s routing fees from the \xe2\x80\xa6AlReturn count of all samples.CjHashes all the byte slices retrieved from the iterator \xe2\x80\xa60AnThe id of the incoming channelAlIs task group shutting down?0BgReturn an iterator over all module dataDgLeaves the specified federation by issuing a <code>leave-fed</code> \xe2\x80\xa6CnCreates a GET handler for the Iroh endpoint by wrapping it \xe2\x80\xa6D`Make a <code>oneshot::Receiver</code> that will fire on shutdownBoCreate a new admin client connected to this fedBmStarts a new federation with 3/4 peers onlineDfOpens the backup database in the <code>snapshot_dir</code>. If the \xe2\x80\xa6BdParse a mnemonic in normalized UTF8.CiRetrieves the basic information about the Gateway\xe2\x80\x99s \xe2\x80\xa6BhThe public keys for the bitcoin multisig0DfA map keyed by the <code>UserChannelId</code> of a channel that is \xe2\x80\xa6CcThe amount to push to the other side of the channellInsert entryB`Remove entry by <code>key</code>ClDetermines the denominations to use when representing an \xe2\x80\xa6BiThe requested amount to spend out of bandDkRestarts the gateway using the provided <code>bin_path</code>, which is \xe2\x80\xa6CnReturns an iterator over the ranges of operation log keys, \xe2\x80\xa6BlRun the command logging the output and errorClThis is the default total fee the gateway recommends for \xe2\x80\xa6CgThis is the fee the gateway charges for an outgoing \xe2\x80\xa6DgRun from a <code>build.rs</code> script to detect code version. See \xe2\x80\xa6CiCreate a savepoint during the transaction that can be \xe2\x80\xa6BaThe short channel id of the HTLC.CaThe <code>short_channel_id</code> of this channelChSubscribes to a stream of updates about a particular \xe2\x80\xa6BlHandy alias for <code>Self::threshold</code>Cjbls12-381 keys are used for the guardians\xe2\x80\x99 threshold \xe2\x80\xa6CmConvert the mnemonic back to the entropy used to generate \xe2\x80\xa6BkSets the fedimint-cli and mint client aliasCcSee <code>ClientModuleInit::used_db_prefixes</code>AnDb prefixes used by the moduleCcSee <code>ServerModuleInit::used_db_prefixes</code>101BlAny time we detect one of the scripts in \xe2\x80\xa6CfUpdates local state and notify leader that we have \xe2\x80\xa6BhCreate warnings about uncommitted writesCkConverts weight to virtual bytes, defined in BIP-141 as \xe2\x80\xa6CkErrors that authenticated endpoints can encounter. Full \xe2\x80\xa6ChA group of inputs and state machines responsible for \xe2\x80\xa600CcClient metadata that will be stored/restored on \xe2\x80\xa6CfAll the info we configure prior to config gen startingCaA function/closure type for handling dashboard UIBhPossible outcomes of preimage decryptionBmContains all the configuration for the clientAdTracks a transactionAdEmpty batch request.21BiThreshold-encrypted <code>Preimage</code>CdA special key that creates assets for a test/exampleClEnvironment variable to select database backend (rocksdb \xe2\x80\xa6BfEnv var to override iroh relays serverDi<code>GatewayParameters</code> is a helper struct that can be derived \xe2\x80\xa6Dh<code>devfed</code> then reboot gateway daemon for both LDK and LND. \xe2\x80\xa6AlReturns the Bitcoin RPC kindCbA token proving the the API call was authenticatedCeAn API (module or global) that can query a federationAoInterface for Module Generation0ClThis API is intentionally kept very minimal, as its main \xe2\x80\xa6BmRepresents an output of the Lightning module.B`Data needed by the state machineChWill be encrypted and not shared such as private key \xe2\x80\xa6CeInformation needed by a client to update output fundsClThe mint module currently doesn\xe2\x80\x99t define any consensus \xe2\x80\xa60CeOld and no longer used, will be deleted in the futureAnTyped history item of a moduleCjRepresents an operation triggered by a user, typically \xe2\x80\xa6CjStruct used for processing log entries after they have \xe2\x80\xa6CiUtility struct for logging payment hashes. Useful for \xe2\x80\xa6CjThis is the maximum receive fee of half of one percent \xe2\x80\xa6C`Ready to run config gen once all peers are readyDg<code>devfed</code> then tests if the recovery tool is able to do a \xe2\x80\xa6DhMiniscript <code>Translator</code> that replaces a public key with a \xe2\x80\xa6CcManually submit a fedimint transaction to guardiansDjData inside <code>TimeReporter</code>, in another struct to be able to \xe2\x80\xa6BkErrors that might be returned by the serverBjA self-allocated ID that is mostly orderedClAllows adding state machines from inside a transition to \xe2\x80\xa60BdFederation Api announcement handlingCnList API URL announcements from all peers we have received \xe2\x80\xa6DgSmall LRU used as <code>IGlobalFederationApi::await_block</code> cache.CkWaits for the transaction to be accepted or rejected as \xe2\x80\xa60CjFetch the backup statistics from the federation (admin \xe2\x80\xa6AlStart a database transaction0BlBegin a new committable database transactionBoThe password to use when connecting to bitcoind0BoThe username to use when connecting to bitcoind0CjBroadcasting pending txes can be triggered immediately \xe2\x80\xa6CgChecks the gateway\xe2\x80\x99s database to determine if the \xe2\x80\xa6BcThe amount to fund the channel withCkThe difference in CLTV values between this node and the \xe2\x80\xa6AfCore consensus version00C`Provisional implementation of note consolidationBoWhether to disable base fees, set by the leader0C`Whether to disable base fees for this federation1A`Client Event LogBoReturns the fedimintd version a peer is runningCfReturns the tagged fedimintd version currently runningAiGet the fedimintd versionBdComma separated list of API secrets.ChAttempts to deserialize an uncompressed element. See \xe2\x80\xa60AdSignature of gatewayCeGenerates denominations of a given base up to and \xe2\x80\xa6CnGenerate a new random mnemonic and set it Returns an error \xe2\x80\xa6CiReads all active states from the database and returns \xe2\x80\xa6CdConverts the consensus config into the client config00000AmGet the general error if any.B`Constructs a module config by idBkReturns the current consensus session countCmReturns the node\xe2\x80\x99s estimated chain sync percentage as a \xe2\x80\xa6CkRetrieves a temporary database from the database backup \xe2\x80\xa6CkFetches the fees that would need to be paid to make the \xe2\x80\xa6ChShutdown the task group shared throughout fedimintd, \xe2\x80\xa6CkHandles a request for the gateway to backup a connected \xe2\x80\xa60CjThe maximum value in msat available for routing with a \xe2\x80\xa6ClThe minimum value, in msat, which must be relayed to the \xe2\x80\xa6BgReturn an iterator over all module dataClCreates a POST handler for the Iroh endpoint by wrapping \xe2\x80\xa6CmThe public key of the gateways client module. This key is \xe2\x80\xa6CmNew <code>Client</code> that already joined <code>self</code>AfLNv1 outgoing contract0BgThe outgoing contract for this payment.BeOverride api URLs used by the client.BhThe federations public peg-in-descriptor000CiRetry until <code>f</code> succeeds or timeout is reachedCkReturns an stream of key-value pairs with keys within a \xe2\x80\xa6CkAwait the next message from peer; return None if we are \xe2\x80\xa6BfReport errors that are worth reportingAaReport any errorsB`Reset the set of other guardiansCkHelper function for atomically changing the Gateway\xe2\x80\x99s \xe2\x80\xa6BdSet the client <code>Metadata</code>CnTell all tasks in the group to shut down and wait for them \xe2\x80\xa6CaTry to attach signatures to a pending peg-out tx.CiSpawn a task that will get cancelled automatically on \xe2\x80\xa6ChSpawns background tasks for monitoring the status of \xe2\x80\xa6BgStarts all peers not currently running.ChFor sending API events to consensus such as transactionsChReturns a stream of updates about an ongoing deposit \xe2\x80\xa6CeThe target federation ID if a swap was performed, \xe2\x80\xa6BgOur secret key for decrypting preimagesBmTrims old entries from the trimable event logCbThe checked version of <code>from_secs_f32</code>.CbThe checked version of <code>from_secs_f64</code>.DoAttempts to fix inconsistent wallet states. <strong>Breaks privacy </strong>\xe2\x80\xa6nUnsigned notesBfCreates an invoice that is not payableCnUnwraps the \xe2\x80\x9ccommit failed\xe2\x80\x9d error variant. Use this in \xe2\x80\xa6CjVerifying a ciphertext guarantees that it has not been \xe2\x80\xa6BjReplace module generator registry entirelyBdUse for displaying bytes in the logsClState made available to all API endpoints for handling a \xe2\x80\xa6DhAmount of bitcoin to send, or <code>All</code> to send all available \xe2\x80\xa6CeA fedimint-client interface exposed to client modulesCmDoes the client modules need to run recovery before being \xe2\x80\xa6CiConfig for the client-side of a particular Federation \xe2\x80\xa6AdConsensus is runningCjCreate a bcrypt hash of a password, for use in gateway \xe2\x80\xa6DlA newtype for a nice <code>fmt::Debug</code> of a <code>ConsensusItem</code>B`Data needed by the state machineChWill be encrypted and not shared such as private key \xe2\x80\xa6CiNon-transaction items that will be submitted to consensusCeInformation needed by a client to update output funds3210B`Prefixes for executor DB entriesCkThe URL to use when connecting to an Esplora server for \xe2\x80\xa6E`<code>devimint</code> will set when code is running inside <code>devimint</code>CjEnv variable to set to force git hash during build processDcPrefix of the <code>FederationId</code>, useful for UX improvementsCnReturns when we obtain a threshold of valid responses. RPC \xe2\x80\xa6AmFederation-wide client config0BaNot implemented for HTTP clients.kError type.CnName of the folder that the gateway uses to store its node \xe2\x80\xa6ClState machine that requests the lightning gateway to pay \xe2\x80\xa60CmRun a load test where many users in parallel will receive \xe2\x80\xa6DjA <code>MetaValue</code> in a consensus (which means it has a revision \xe2\x80\xa6BfLocal parameters for config generation0AhPer-module instance dataDhA fake <code>sm::Context</code> for <code>NeverClientStateMachine</code>00CjPlain-text stored password, used to restart the server \xe2\x80\xa6ChPeg in index that was already allocated and is being \xe2\x80\xa6CkA peg-out tx that is ready to be broadcast with a tweak \xe2\x80\xa6ClErrors that unauthenticated endpoints can encounter. For \xe2\x80\xa6CcTrait defining a way to generate, serialize and \xe2\x80\xa60CiChild ID used to derive the spend key from a note\xe2\x80\x99s \xe2\x80\xa6CkThe state of an operation sending a payment over lightning.CiConfig for the server-side of a particular Federation \xe2\x80\xa60CiA type that can be used as module-shared value inside \xe2\x80\xa60BiThe state of the server returned via APIsClHow many txs can be stored in memory before blocking the \xe2\x80\xa6CnReturns when we obtain a threshold of identical responses. \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>C`Locally unencrypted config unique to each memberB`Contains the types defined aboveBkErrors that might be returned by the serverCcAdds a number of state machines to the executor \xe2\x80\xa6CfA backoff strategy for relatively quick foreground \xe2\x80\xa6DhPanic if the <code>Self::decoding_mode</code> is not <code>Reject</code>0CoGet decoders for <code>modules</code> and skip unsupported ones0BfBackoff strategy for background tasks.AlEnable tokio console loggingBeGet the status of the bitcoin backendDeRun the future or cancel it if the <code>TaskGroup</code> shuts down.DgComputes the <code>StructurePaymentEvents</code> for all LNv1 payments.DgComputes the <code>StructurePaymentEvents</code> for all LNv2 payments.BoConnection pool for stable endpoint connectionsCkThis module\xe2\x80\x99s contribution to the next consensus proposal0000CnCheck the difference between what\xe2\x80\x99s desired vs submitted \xe2\x80\xa61CfThis module\xe2\x80\x99s contribution to the next consensus \xe2\x80\xa6222ClReturns the full path where the database checkpoints are \xe2\x80\xa6CmStatus of preimage decryption, will either end in failure \xe2\x80\xa6D`Define \xe2\x80\x9cdyn newtype\xe2\x80\x9d (a newtype over <code>dyn Trait</code>)BhEncrypted preimage as specified in offerCkGet the decoded <code>T</code> and panic if not decoded yetBcThe gateway\xe2\x80\x99s federation manager.A`Lightning ModuleCnA library for cooperative port allocation between multiple \xe2\x80\xa6DiProduces a hash as <code>u64</code> from the current state of a given \xe2\x80\xa6AkKey used to pay the gatewayCbAlign an ecoded message size up for better privacyCkKey used to encrypt and authenticate data stored on the \xe2\x80\xa6ClReturns the instance id of the first module of the given \xe2\x80\xa6CfWaits till tx is found in mempool and returns the feesCiRetrieve the wallet-level mnemonic words. Returns the \xe2\x80\xa6ChGet reference to a server module instance by module kindAnGet script transaction historyAlGet items in a given sessionChReturns the number of held e-cash notes per denominationBiReturns a summary of the wallet\xe2\x80\x99s coinsCmReturns a Bitcoin deposit on-chain address for pegging in \xe2\x80\xa60CcHandle session outcome, adjusting the current stateCcCancel the tx to avoid debugging warnings about \xe2\x80\xa6BcDon\xe2\x80\x99t warn-log uncommitted writesCnReturns a vector of \xe2\x80\x9clegacy\xe2\x80\x9d federations which did not \xe2\x80\xa6ClReceiver for events fired every time (ordered) log event \xe2\x80\xa60CnTurn a typed <code>ClientInputBundle</code> into a dyn versionAoMigrate client module databasesCkCreate a client connected to this fed but using RocksDB \xe2\x80\xa6CeEnsure the content of the Cow is normalized UTF8. \xe2\x80\xa6DdReturns an a <code>UpdateStreamOrOutcome</code> enum that can be \xe2\x80\xa6ClParses a version string returned from clap ex: fedimintd \xe2\x80\xa6CkRetrieve route hints from the Lightning node, capped at \xe2\x80\xa6ChPays a LN invoice with our available funds using the \xe2\x80\xa6CmReturns an stream of key-value pairs with keys that start \xe2\x80\xa6CkReads the server from the local, private, and consensus \xe2\x80\xa6BdWait to receive money at an outpointCdClient to join a federation with a restore procedureAiA deposit monitoring taskBlSubmits a transaction to the Bitcoin networkCmNOTE: this subscription never ends even after update task \xe2\x80\xa6ChThe threshold public keys for encrypting the LN preimageCmConverts a federation id to a public key to which we know \xe2\x80\xa60EkGet <code>DatabaseTransaction</code> isolated to a <code>prefix</code> of <code>self</code>CkConvert to seed bytes with a passphrase in normalized UTF8.BlSetup a console server for tokio logging \xe2\x80\xa6CkGenerates configs for all peers in a trusted manner for \xe2\x80\xa6000AnGenerate the transaction hash.fPanicsCjReturns the fedimintd version from clap or default min \xe2\x80\xa6CiReturns the gatewayd version from clap or default min \xe2\x80\xa6CmReturns the fedimint-cli version from clap or default min \xe2\x80\xa6ClReturns the gateway-cli version from clap or default min \xe2\x80\xa6BkWaits for key to have a value that matches.C`Waiting for guardian to set the local parametersBhA high level database transaction handleCiThe state machine driving forward a deposit (aka peg-in).BfLocal parameters for config generationAdTracks a transaction1ChPrefixes between 0xb1..=0xcf shall all be considered \xe2\x80\xa6CnThe URL to use when connecting to a bitcoin node over RPC. \xe2\x80\xa6CmEnvironment variable that specifies the location of LND\xe2\x80\x99\xe2\x80\xa6CmEnvironment variable that specifies the URL to connect to \xe2\x80\xa61BkHow long a gateway announcement stays validCnClient side Lightning module <strong>for the gateway</strong>.ClThe high-level state of a reissue operation started with \xe2\x80\xa6CfReturns the Bitcoin RPC kind and URL, if authenticatedBdA Bitcoin Core importable descriptorAhAn internal client error0CiLists active and inactive state machine states of the \xe2\x80\xa6BlWill be the same for every federation memberCjThe state machine used for fast-forwarding backup from \xe2\x80\xa6DgKeeps the data to generate <code>SpendableNote</code> once the mint \xe2\x80\xa6ChV0 version of operation log entry for migration purposesDeNumber of ports we allocate for every <code>fedimintd</code> instanceAmModule specific logic for \xe2\x80\xa6CaCreates a struct that can be used to make our \xe2\x80\xa6CjSign and announce a new API endpoint. The previous one \xe2\x80\xa6BmContains all the configuration for the clientCfA PSBT that is awaiting enough signatures from the \xe2\x80\xa6ClThe user-requested cancellation failed, the e-cash notes \xe2\x80\xa6CnThe user-requested cancellation was successful, we got all \xe2\x80\xa6CnDuring config gen, used for an API-to-API call that adds a \xe2\x80\xa6AhAdd peer connection infoCcCancels a HOLD invoice that is specified by the \xe2\x80\xa6CfCreates a backup of the database in the checkpoint \xe2\x80\xa6ClOptional override URL for directly connecting to an Iroh \xe2\x80\xa6CfPoints to a Bitcoin API that the client can use to \xe2\x80\xa60BjReads an encrypted json file into a structCnMines enough blocks to finalize mempool transactions, then \xe2\x80\xa6BkFormat json string value if it\xe2\x80\x99s too longClFormat json array value truncating elements if there\xe2\x80\x99s \xe2\x80\xa6BeFormat details about a consensus itemCmReturns a bitcoind client using the credentials that were \xe2\x80\xa6CjGet the current meta consensus value along with it\xe2\x80\x99s \xe2\x80\xa6CkReads all inactive states from the database and returns \xe2\x80\xa6CnIf a transaction is included in a block, returns the block \xe2\x80\xa6BoReturns the block height for the txid if found.CmUserAuth is an axum extractor guaranteeing when the admin \xe2\x80\xa6ChHandles an authenticated request for the gateway\xe2\x80\x99s \xe2\x80\xa60ClHandles a request to change the lightning or transaction \xe2\x80\xa60CiInstructs the gateway to shutdown, but only after all \xe2\x80\xa60CkReturns a Bitcoin TXID from a peg-out transaction for a \xe2\x80\xa60DcMap of federation indices to <code>FederationId</code>. Use for \xe2\x80\xa6EfCheck if env variable is unset or equal <code>0</code> or <code>false</code> which \xe2\x80\xa6ClCheck if the gateway satisfy the LNv1 payment by funding \xe2\x80\xa6Dh<code>LastECashNoteIndex</code> but tracked in flight. Basically max \xe2\x80\xa6CoTurn a typed <code>ClientOutputBundle</code> into a dyn versionAoSee <code>maybe_add_send</code>BoMigrates <code>MintClientStateMachinesV0</code>CmComputes the minimum contract amount necessary for making \xe2\x80\xa6ClThe minimum amount that must be escrowed for the payment \xe2\x80\xa6CjParse a mnemonic in normalized UTF8 in the given language.BiReads a plaintext json file into a structAnNote indices that were reused.0ClReturns secrets for the note indices that were reused by \xe2\x80\xa6ChSend some bitcoin to an address then mine a block to \xe2\x80\xa6CcSettles a HOLD invoice that is specified by the \xe2\x80\xa6DhCreate the Iroh <code>Endpoint</code> and spawn a thread that starts \xe2\x80\xa6CkTotal amount of immediately spendable UTXOs and pending \xe2\x80\xa60CiReturns a stream of transaction updates for the given \xe2\x80\xa6B`Update all source in background.DdValidate the schnorr signatures signed over the <code>tx_hash</code>ChReturns if an invoice has been paid yet. To avoid DB \xe2\x80\xa6ClWaits for the Lightning node to be synced to the Bitcoin \xe2\x80\xa6CfWait until Meta Service is initialized, after this \xe2\x80\xa6EcAttach decoder for a specific <code>Type</code>/<code>DynType</code> pair where \xe2\x80\xa6ClWrites the server into configuration files (private keys \xe2\x80\xa6CeHow long to wait before timing out client connectionsBoA writer counting number of bytes written to itCcNote: only added in 0.8 and not backfilled. See \xe2\x80\xa6CiUser\xe2\x80\x99s backup, received at certain time, containing \xe2\x80\xa6ClA reference back to itself that the module cacn get from \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>BiResources particular to a module instanceChState machine that completes the incoming payment by \xe2\x80\xa6BbConsensus version of a core server0DeDeprecated: Use <code>DatabaseVersionKey(ModuleInstanceId)</code> \xe2\x80\xa6CnContext passed to the db migration <em>functions</em> (pay \xe2\x80\xa6BlWill be the same for every federation memberAnTyped history item of a module1CmEnvironment variable that instructs the gateway to run in \xe2\x80\xa6Cn<code>DbMigrationFn</code> with no extra context (ATM gateway)9AmFederation-wide client configBfDownload guardian config to back it upCmArchive of all the guardian config files that can be used \xe2\x80\xa6AmFedimint database transactionCnOperations common to Server and Client side module gen dyn \xe2\x80\xa6>BmThe API for the global (non-module) endpointsCbTrait marker for the module (non-global) endpointsCfAnything representing a contract which thus has an \xe2\x80\xa6CiTransaction id and output index identifying an output \xe2\x80\xa6CiWhich amount units this module supports being primary forClRequest sent to the federation that requests the removal \xe2\x80\xa6DkUse builder syntax to set the inputs and finish with <code>call()</code>\xe2\x80\xa6AlCollection of server modulesBbDump Client\xe2\x80\x99s Trimable Event LogChA <code>SessionOutcome</code>, signed by the Federation.CnDerive an extra round of federation-id to the secret, like \xe2\x80\xa60CjState machine to (re-)submit a transaction until it is \xe2\x80\xa600ChWill be encrypted and not shared such as private key \xe2\x80\xa6CiNon-transaction items that will be submitted to consensusCeInformation needed by a client to update output fundsChgraph LR Created \xe2\x80\x93&gt; Success Created \xe2\x80\x93&gt; AbortedCmPrepare an encrypted backup and send it to federation for \xe2\x80\xa6CnThe bcrypt password hash used to authenticate the gateway. \xe2\x80\xa6CeGateway webserver authentication bcrypt password hashC`Begin a new non-committable database transactionCdSecret key for the atomic broadcast to sign messagesCjList of overrides to use when attempting to connect to \xe2\x80\xa600AiDecode an object from hexCaGet the current consensus fee rate for UI displayBlThe default routing fees for new federationsCdThe default routing fees that are applied to new \xe2\x80\xa6BjWire-format encoding of feature bit vectorBiReturns the duration since the Unix epochBiWrites struct into an encrypted json fileCnExtracts the Bearer token from the Authorization header of \xe2\x80\xa6CkUses immutable data structures and saves to redb on commit.A`Lightning ModuleBeFedimint Core Server module interfaceCmAdds funding to a transaction or removes over-funding via \xe2\x80\xa6CcCreate metadata as json from typed <code>val</code>CnDuring config gen, gets all the server connections we\xe2\x80\x99ve \xe2\x80\xa6AlFetch mnemonic from databaseAlOnly meant for debug toolingBiThe incoming HTLC amount in millisatoshi.CmAdd a task to the group that waits for CTRL+C or SIGTERM, \xe2\x80\xa6CiVerifies if the supplied password in the Iroh request \xe2\x80\xa6BkReturn an iterator over module ids an kindsCmThe public key of the gateways lightning node. Since this \xe2\x80\xa6CiReturns the keypair that uniquely identifies the gateway.AdModular ArchitectureBmStarts a new federation with 4/4 peers onlineBhThe outgoing HTLC amount in millisatoshiBfCalled every time a peg-in was claimedCnAll change UTXOs from peg-out transactions that are either \xe2\x80\xa60CnAll transaction outputs from peg-out transactions that are \xe2\x80\xa60BhWrites struct into a plaintext json fileCkPoll a transaction by its txid until it is found in the \xe2\x80\xa6AkDelete keys matching prefixCiRun recover of a module from federation consensus historyCeRegisters the gateway with each specified federation.ClRegisters a GET API handler for both the HTTP server and \xe2\x80\xa6CmReturns the data from which the client\xe2\x80\x99s root secret is \xe2\x80\xa6AmSet local guardian parametersCmNOTE: this subscription never ends even after update task \xe2\x80\xa6BmAttempt to deserialize metadata as typed jsonCbTracks the block height a transaction was includedCdUpdates the gateway cache by fetching the latest \xe2\x80\xa6DkVerifies that the saved <code>ClientConfig</code> contains the expected \xe2\x80\xa6CaReturns once the provided session count completesCdWatches for a script and returns any transaction \xe2\x80\xa6ClOverride if the DHT should be enabled when using Iroh to \xe2\x80\xa6CnAllow executor to build state machines associated with the \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>ClChild ID used to derive the blinding key from a note\xe2\x80\x99s \xe2\x80\xa6CmClose all channels with a peer, claiming the funds to the \xe2\x80\xa6DbType erased <code>ModuleInitParams</code> used to generate the \xe2\x80\xa6CiExtension trait for IDashboardApi providing type-safe \xe2\x80\xa6DlMarker trait for <code>DatabaseKey</code>s where <code>NOTIFY</code> is trueBoEncrypted version of <code>ClientBackup</code>.ChPrefixes between 0xb1..=0xcf shall all be considered \xe2\x80\xa6ChPrefixes between 0xb0..=0xcf shall all be considered \xe2\x80\xa60000CjBuilder struct for creating a <code>FederationTest</code>.EeA wrapper with <code>fmt::Display</code> for <code>anyhow::Error</code> that will \xe2\x80\xa60ChState machine that completes the incoming payment by \xe2\x80\xa6BlCode used to access <code>global_dbtx</code>CgLNv1 event that is emitted when an incoming payment \xe2\x80\xa6CnEvent that is emitted when an incoming payment attempt has \xe2\x80\xa6Bi0xd0.. reserved for Fedimint internal useAhInvalid subscription ID.CgWe keep a separate mapping of incoming and outgoing \xe2\x80\xa6AlClient side lightning moduleCjCollection of decoders belonging to modules, typically \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>CgLNv1 event that is emitted when an outgoing payment \xe2\x80\xa6CnEvent that is emitted when an outgoing payment attempt has \xe2\x80\xa6CjPriority module priority (lower number is higher priority)CnFixture implementing bitcoin node under test by talking to \xe2\x80\xa60CfThe state of an operation receiving a payment over \xe2\x80\xa6C`Trigger wallet address check (in the background)AlTransaction was not balancedBfLocal parameters for config generationCmEither a stream of operation updates if the operation hasn\xe2\x80\xa6CjContains the Bitcoin transaction id of the transaction \xe2\x80\xa60BeAdds a state machine to the executor.0;Dd<code>apply_migrations</code> iterates from the on disk database \xe2\x80\xa6CkReturns an Err if the command doesn\xe2\x80\x99t return an error \xe2\x80\xa6CgReturns a bool indicating if it was an external receiveClSigning session keys for each federation member Optional \xe2\x80\xa6ChPublic keys for the atomic broadcast to authenticate \xe2\x80\xa61E`<code>Self::consensus_hash</code> for <code>bitcoin::hashes::sha256::Hash</code>CnThe time it took to order our last proposal in the current \xe2\x80\xa6Bh<strong>Mostly used for testing</strong>BbReceive over LN with a new invoiceCmConstructs the client builder with the modules, database, \xe2\x80\xa6CgReturns an error if the amount is more precise than \xe2\x80\xa6CnMapping from short channel id to the federation id that it \xe2\x80\xa6CnForce a base federations port, e.g. for convenience during \xe2\x80\xa6EbFilters the <code>PersistedLogEntries</code> by the <code>EventKind</code> and \xe2\x80\xa6CkChecks the Gateway\xe2\x80\x99s current state and returns the proper0CjGet minor supported version by consensus and major numbers0CkNext <code>EventLogId</code> to use for new ordered events.ChReturns the number of held e-cash notes per denominationDdMaps all <code>Unreachable</code> states in the state machine to \xe2\x80\xa6DmMigrates <code>SubmittedOfferV0</code> to <code>SubmittedOffer</code> and \xe2\x80\xa6Bn<code>AmountUnit</code> was added to the stateDcMigrates <code>SubmittedOffer</code> with enum prefix 5 back to \xe2\x80\xa6DhMigrates <code>Refund</code> state with enum prefix 5 to contain the \xe2\x80\xa6BmGet the current wallet summary for UI displayCmHashes the given data directly to u64 with an engine with \xe2\x80\xa6BnThe amount of the incoming contract, in msats.DjTODO(v0.5.0): We do not need to run the <code>gatewayd-mnemonic</code> \xe2\x80\xa6CnModify server configuration files to add a new meta module \xe2\x80\xa6EdTail of <code>pending</code>. <code>pending_notes</code> is filled by generating \xe2\x80\xa6DhOpen a temporary database located at <code>temp_path</code> and copy \xe2\x80\xa6CkReturns the kind of the module that generated the operationCeReturns a map of peer ID to estimated round trip timeCjExtracts the u64 index from an attribute if it matches \xe2\x80\xa6CmPublic key from which other keys will be derived for each \xe2\x80\xa6CjSchedule given address for immediate re-check for depositsCmAdd a change UTXO to our spendable UTXO database after it \xe2\x80\xa6CmRegisters a POST API handler for both the HTTP server and \xe2\x80\xa6DkMake an aggregate request to federation, using <code>strategy</code> to \xe2\x80\xa6CkScan unspent incoming contracts for a payment hash that \xe2\x80\xa6B`Sets the outcome of an operationCnSubscribe to updates on the progress of a raw e-cash spend \xe2\x80\xa6CnReturns true if the federation\xe2\x80\x99s wallet module consensus \xe2\x80\xa6AmTerminates all running peers.CmConverts the command line parameters into a helper struct \xe2\x80\xa6CnTweak a secret key with an index, this is used to claim an \xe2\x80\xa6ClChange UTXOs created from peg-out transactions that have \xe2\x80\xa60CmTransaction outputs consumed in peg-out transactions that \xe2\x80\xa60ClVerify that the lightning node supports private payments \xe2\x80\xa6DfBuild the <code>Client</code> with a custom wrapper around its api \xe2\x80\xa6ClOverride if the parallel unstable/next Iroh stack should \xe2\x80\xa6DhGet <code>DatabaseTransaction</code> isolated to a prefix of a given \xe2\x80\xa6DjCreate <code>Database</code> isolated to a partition with a prefix for \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>BhGlobally declared core consensus version0DjA wrapper over <code>IRawFederationApi</code> adding client side event \xe2\x80\xa602ChGlobal state and functionality provided to all state \xe2\x80\xa6DjAn owned, immutable output of a <code>Transaction</code> before it was \xe2\x80\xa6DgA <code>DbMigrationFn</code> with inner-context type-erased for all \xe2\x80\xa6CmNumber of blocks until outgoing lightning contracts times \xe2\x80\xa6CgEnv var for bitcoin URL (obsolete, use FM_DEFAULT_* \xe2\x80\xa6ClEnvironment variable that specifies that Bitcoin network \xe2\x80\xa6BfEnv var to disable Iroh\xe2\x80\x99s use of DHTCkPublic error that indicates the requested federation is \xe2\x80\xa6DgThe funded version of an <code>IncomingContract</code> contains the \xe2\x80\xa6BiGet consensus on the value of a given keyCgLNv1 event that is emitted when an incoming payment \xe2\x80\xa6CnEvent that is emitted when an incoming payment attempt has \xe2\x80\xa6ChThe status of a server, including how it views its peersCjState machine that waits on the receipt of a Lightning \xe2\x80\xa6Di<code>devfed</code> then pegin LND Gateway. Kill the LN node, restart \xe2\x80\xa6BjConsensus parameters for config generation0BaSee <code>MintOutputStates</code>BoConsensus version of a specific module instance0DcRe-exporting of everything from <code>fedimint_client_module</code>CkA counter tracking next index to use to derive a peg-in \xe2\x80\xa6CgLNv1 event that is emitted when an outgoing payment \xe2\x80\xa6CmEvent that is emitted when an outgoing payment attempt is \xe2\x80\xa6CiConnection information sent between peers in order to \xe2\x80\xa6C`Waiting for peers to share the config gen paramsBkSharing the connection codes with our peersDdA version of <code>SpendableNote</code> that didn\xe2\x80\x99t decode the \xe2\x80\xa6CkInformation about the amount represented by an input or \xe2\x80\xa6BlWill be the same for every federation memberCnThe user requested a cancellation of the operation, we are \xe2\x80\xa6BnThe non-resource, just plain-data parts of \xe2\x80\xa6Anasync trait that use MaybeSendCmWaits until a specific block height at which the contract \xe2\x80\xa6CiSubscribes to either a internal or external lightning \xe2\x80\xa6CmWait for the e-cash notes to be retrieved. If this is not \xe2\x80\xa6CmCheck if an e-cash  note was already issued for the given \xe2\x80\xa6CnReturns the amount of time elapsed from another instant to \xe2\x80\xa6ClReads a plain root secret from a database to construct a \xe2\x80\xa6CkCreate an output that funds an incoming contract within \xe2\x80\xa6CmCreate an output that incentivizes a Lightning gateway to \xe2\x80\xa6CkReturns the default esplora server according to the networkCkFor real Bitcoin we want to have a responsible default, \xe2\x80\xa6CbGet the federation invite code to share with usersDjRe-derive client\xe2\x80\x99s <code>root_secret</code> using the federation ID. \xe2\x80\xa6BmScheme for deriving deterministic secret keysCgRetry every max 10s for up to one hour, with a more \xe2\x80\xa6CmFormat json object value truncating keys if there\xe2\x80\x99s too \xe2\x80\xa6AnReturns the Bitcoin RPC configCnGets a funding address belonging to the lightning node\xe2\x80\x99s \xe2\x80\xa6CfLike <code>Self::await_session_lru</code>, but for \xe2\x80\xa6CgAfter DKG, returns the hash of the consensus config \xe2\x80\xa6BjDownload the guardian config to back it upCjRetrieves an invoice by the payment hash if it exists, \xe2\x80\xa60C`Handle joining federation using unified databaseCiRequests the gateway to pay an outgoing LN invoice on \xe2\x80\xa6ClQueries the client log for payment events and returns to \xe2\x80\xa60CjUse to detect if running in a test environment, either \xe2\x80\xa6CmInternal client sender to wake up log ordering task every \xe2\x80\xa60ClThis method starts n state machines with given operation \xe2\x80\xa6BiConvert clap arguments to backup metadataEfDerive the note <code>DerivableSecret</code> from the Mint\xe2\x80\x99s <code>secret</code> \xe2\x80\xa6ClNext tweak idx to add to <code>pending_pubkey_scripts</code>CdAll the pubkey scripts we are looking for in the \xe2\x80\xa6AfPrepare funding walletCf<code>Self::primary_module_for_unit</code> for BitcoinCnThis function is called once for every consensus item. The \xe2\x80\xa6000DcBUG: This implementation fails to return an <code>Err</code> on \xe2\x80\xa6111111AnEither a BOLT12 offer or LNURLCeLegacy mechanism for registering the Gateway with \xe2\x80\xa6CnTry to reissue e-cash notes received from a third party to \xe2\x80\xa6CjAttempts to remove a gateway\xe2\x80\x99s registration from the \xe2\x80\xa6CjReset the peer setup codes during the federation setup \xe2\x80\xa6CmCreates the database backup directory for a server module \xe2\x80\xa60CiSee <code>ClientModuleInit::supported_api_versions</code>ClApi versions of the corresponding server side module\xe2\x80\x99s \xe2\x80\xa6BeApi versions supported by this serverBoDoes this module support being a primary module0C`Try to cancel a spend operation started with \xe2\x80\xa6BfValidate that a config update is validCaWorkaround for a serde <code>flatten</code> quirk0DjStruct that implements <code>IRawDatabaseTransaction</code> and can be \xe2\x80\xa6CmBIP39 root secret encoding strategy allowing retrieval of \xe2\x80\xa6AmClient connection string fileDf<code>devfed</code> then tests that spent ecash cannot be double spentBn<code>DbMigrationFn</code> used by core clientDk<code>ClientMigrationFn</code> is a function that modules can implement \xe2\x80\xa6ChPrefixes between 0xd0..=0xff shall all be considered \xe2\x80\xa60CmThe default number of route hints that the legacy gateway \xe2\x80\xa6BeCurrent status of preimage decryptionBjConsensus parameters for config generation0ClEnv var for bitcoin RPC kind (obsolete, use FM_DEFAULT_* \xe2\x80\xa6ClEnvironment variable that specifies the URL that clients \xe2\x80\xa6ClEnvironment variable that specifies the directory of the \xe2\x80\xa6CmEnvironment variable that specifies the mnemonic that the \xe2\x80\xa6CjThe final state of an operation sending a payment over \xe2\x80\xa6CiThe high-level state of an intercepted HTLC operation \xe2\x80\xa6CkAdditional operations (only some) database transactions \xe2\x80\xa6CfRaw database transaction (e.g. rocksdb implementation)BaSee <code>MintOutputStates</code>0CeOld and no longer used, will be deleted in the futureDcRe-exporting of everything from <code>fedimint_client_module</code>CmA fake <code>sm::State</code> that can actually never happen.00CnWe will check this many addresses after last actually used \xe2\x80\xa6CjJust uses 64 random bytes and derives the secret from them0CbShare to decrypt an <code>EncryptedPreimage</code>CdPrimary module candidates at specific priority levelCiA single recurring payment code (e.g. LNURL) that was \xe2\x80\xa6CmThe response payload was returned successfully but failed \xe2\x80\xa60ClA summary of server database versions for all registered \xe2\x80\xa60ChCaution: if no notes of the correct denomination are \xe2\x80\xa6CnHelper struct for storing computed data about outgoing and \xe2\x80\xa6CnThis is the fee the gateway uses to cover transaction fees \xe2\x80\xa6BbModule (server side) config, typed0CnAdds a number of state machines to the executor atomically \xe2\x80\xa6BmSee <code>apply_migrations_server_dbtx</code>Ck0.4.0 and later uses a hash of broadcast public keys to \xe2\x80\xa60BoEncode and convert to hex string representationCdEncode without storing the encoding, return the sizeEa<code>Self::consensus_encode</code> to newly allocated <code>Vec&lt;u8&gt;</code>BgHandler for the consensus explorer viewBh<strong>Mostly used for testing</strong>CmHelper function that recursively copies all contents from \xe2\x80\xa60ClCreate a mint input from external, potentially untrusted \xe2\x80\xa6ClNumber of checkpoints from the current session to retain \xe2\x80\xa6BjThe fee rate to use in satoshis per vbyte.BmGet the current meta consensus value revisionCkRetrieves the database migrations from the module to be \xe2\x80\xa6C`DB migrations to move from old to newer versions00CmRetrieves the migrations map from the server module to be \xe2\x80\xa600011CfSearches through the event log for all events that \xe2\x80\xa6BbConstructs a module config by nameCfGets the (approximate) network from a bitcoin address.CnReturns the ecash, lightning, and onchain balances for the \xe2\x80\xa60ClHandle a request to have the Gateway leave a federation. \xe2\x80\xa60CnInstructs the Gateway\xe2\x80\x99s Lightning node to open a channel \xe2\x80\xa60CkSend funds from the gateway\xe2\x80\x99s lightning node on-chain \xe2\x80\xa60CaThe HTLC stream, until it is taken by calling \xe2\x80\xa6CmPolls the Gateway\xe2\x80\x99s state waiting for it to shutdown so \xe2\x80\xa6DkReturns <code>iroh::SecretKey</code> and saves it to the database if it \xe2\x80\xa60BkCreates the config gen params for each peerDkReturns the last <code>limit</code> operations. To fetch the next page, \xe2\x80\xa6DkTries to parse <code>str_value</code> as JSON. In the special case that \xe2\x80\xa6BkPrimary module to use for <code>unit</code>CiLiquidity-based routing fee in millionths of a routed \xe2\x80\xa6DiRemoves the <code>PendingTransaction</code> and any transactions tied \xe2\x80\xa6CnIterates through each of the prefixes within the consensus \xe2\x80\xa6BlTools for manipulating the type state of \xe2\x80\xa6CfPublish our signed API announcement to other guardiansCnAdd an API URL announcement from a peer to our database to \xe2\x80\xa6BcTotal amount of all spendable UTXOs0EeConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by \xe2\x80\xa600000000000000000000BhMaps a version hash to a release versionBhWait for all module recoveries to finishCnWrite API version set to database cache. Used when we have \xe2\x80\xa6BfPreimage decryption shares we receivedC`An error returned from the inner stream of a \xe2\x80\xa6DcNewtype over <code>BlindedMessage</code> to enable <code>Ord</code>CiHelps against dust attacks where an attacker deposits \xe2\x80\xa6CfWhich port is for the web ui inside the range from \xe2\x80\xa6CnThe password to use when connecting to a bitcoin node over \xe2\x80\xa6CnThe username to use when connecting to a bitcoin node over \xe2\x80\xa6CfDisable mint base fees for testing and development \xe2\x80\xa6ChGet the list of pending submissions for a given key. \xe2\x80\xa6CgLNv1 event that is emitted when an incoming payment \xe2\x80\xa6CnEvent that is emitted when an incoming payment attempt has \xe2\x80\xa6CmKey under which the federation name can be sent to client \xe2\x80\xa6BnModules are non-compatible with older versions000DfResult of Federation members confirming <code>MintOutput</code> by \xe2\x80\xa60CgLNv1 event that is emitted when an outgoing payment \xe2\x80\xa6CnEvent that is emitted when an outgoing payment attempt has \xe2\x80\xa6CeA summary of server API versions for core and all \xe2\x80\xa60DhA concrete implementation of <code>IServerDbMigrationContext</code> APIsDiWaits for a contract with <code>contract_id</code> to be cancelled by \xe2\x80\xa6ClInfluences the atomic broadcast ordering latency, should \xe2\x80\xa6CnChanges the guardian password by re-encrypting the private \xe2\x80\xa6BoCloses all channels with a peer lightning node.CdGet the current consensus block count for UI displayCbDeserialization function for the external encoding0BlDecode an object with a well-defined format.CiFor the LNv2 protocol, this will create an invoice by \xe2\x80\xa6C`The default transaction fees for new federationsChThe default transaction fees that are applied to new \xe2\x80\xa6ClThis is a hack to allow us to use the deprecated variant \xe2\x80\xa6CfDerive federation-specific secret from wallet mnemonicCdThis is the default total expiration the gateway \xe2\x80\xa6CmThis is the minimum expiration delta in block the gateway \xe2\x80\xa6CkClean up private config and password file backups after \xe2\x80\xa6EhChecks up to <code>gap_limit</code> nonces starting from <code>base_index</code> for \xe2\x80\xa6Cn(soft-deprecated): Get the first instance of a module of a \xe2\x80\xa60ClHandles an intercepted lightning payment. If the payment \xe2\x80\xa6CiReturns a list of Lightning network channels from the \xe2\x80\xa60CdHandles a request to receive ecash into the gateway.0CdUI helper to submit a value change with default authCfInitialize gauges or other metrics that need eager \xe2\x80\xa6CaMaximum number of concurrent Iroh API connectionsCjMake a single API version request to a peer after a delay.CkCreates a new gateway but with a custom module registry \xe2\x80\xa60DgDefault function for creating a gateway with the <code>Mint</code>, \xe2\x80\xa60BoObserve execution time of a closure, in second.CgLock pool used to ensure that our implementation of \xe2\x80\xa6CkIterator over primary modules for a given <code>unit</code>CcRe-encrypts the private config with a new password.ClHandles a stream of incoming payments from the lightning \xe2\x80\xa6DkLike <code>super::SealingKey::seal_in_place_append_tag()</code>, except \xe2\x80\xa6CnSubscribe to all state transitions belonging to the module \xe2\x80\xa6ClChange UTXOs created from peg-out transactions that have \xe2\x80\xa60CmTransaction outputs consumed in peg-out transactions that \xe2\x80\xa60CiThis limits the RAM consumption of a AlephBFT Unit to \xe2\x80\xa6CjLock for spawning exactly one task for updating backup \xe2\x80\xa6CaConvenience extension trait used for wrapping \xe2\x80\xa60ChPrefixes between 0xd0..=0xff shall all be considered \xe2\x80\xa60000CnA compact citem formatter, useful for debugging in case of \xe2\x80\xa6ChWe save the hash of the encrypted preimage from each \xe2\x80\xa6BoWhich port is for api inside the range from \xe2\x80\xa6BoWhich port is for p2p inside the range from \xe2\x80\xa6ClPrint sensitive secrets without redacting them. Use only \xe2\x80\xa6CdThe Iroh/Pkarr DNS server hosted by Fedimint projectCiIn tests we want to routinely enable an extra unknown \xe2\x80\xa6CnAn interface a server module db migration context needs to \xe2\x80\xa6BaSpecial IDs we use for global dkgBaSee <code>MintOutputStates</code>CmGlobal state given to a specific client module and state. \xe2\x80\xa6CcData and API clients available to state machine \xe2\x80\xa60DkA database transactions that wraps an <code>inner</code> one and adds a \xe2\x80\xa6CaCommon state tracked during recovery from historyClThe high-level state of a reissue operation started with \xe2\x80\xa6DkSame as <code>SerdeModuleEncoding</code> but uses base64 instead of hex \xe2\x80\xa6DgA <code>DbMigrationFn</code> with inner-context type-specific for a \xe2\x80\xa6BjConsensus parameters for config generationDgTries to download the <code>ClientConfig</code> from the federation \xe2\x80\xa6CiFetch API versions from peers and discover common API \xe2\x80\xa6ClFilter out duplicate gateways. This is necessary because \xe2\x80\xa6CnForwards a lightning payment to the next hop like a normal \xe2\x80\xa6ChAttempts to deserialize an uncompressed element, not \xe2\x80\xa60CkFetches the encoded client secret from the database and \xe2\x80\xa6CnConvenience function to derive fedimint-client root secret \xe2\x80\xa60CkGet a stream of historical consensus items belonging to \xe2\x80\xa6CnHandles a connection request to join a new federation. The \xe2\x80\xa60DfUse to allow <code>process_output</code> to process RBF withdrawal \xe2\x80\xa6DfReturns a <code>PublicKey</code> that uniquely identifies the Gateway.CmLoads a mnemonic from the database or generates a new one \xe2\x80\xa6EaCreate a fake link between <code>peer1</code> and <code>peer2</code> for test \xe2\x80\xa6CmModify configuration files for a single peer to add a new \xe2\x80\xa6CnReturns the amount of time elapsed from another instant to \xe2\x80\xa6CkFetches and removes notes from the wallet to be sent to \xe2\x80\xa6ChReturns a stream that will output the updated module \xe2\x80\xa6CkReturns a stream that yields the current client balance \xe2\x80\xa61CkReturns true if the lightning backend supports payments \xe2\x80\xa60CbIndicates if the gateway supports private paymentsCmWhen scanning the history of the Federation, there\xe2\x80\x99s no \xe2\x80\xa6CiTo further mitigate the risk of a peg-out transaction \xe2\x80\xa60CnEnvironment variable that specifies the address the gateway\xe2\x80\xa6ClThe final state of an operation receiving a payment over \xe2\x80\xa6CiGet revision of the consensus on the value of a given keyDcRe-exporting of everything from <code>fedimint_client_module</code>CcThe action to take after handling a payment stream.EcSelect notes with total amount of <em>exactly</em> <code>request_amount</code>. \xe2\x80\xa6DfA <code>DbMigrationFnContext</code> with inner-context type-erased \xe2\x80\xa6BcThe transaction caused an overflow.CnTests that guardian password change works and the guardian \xe2\x80\xa6CkCombines the exact threshold of valid blinded signature \xe2\x80\xa6DdIf set, the password part of <code>--bitcoind-url</code> will be \xe2\x80\xa6DcSee <code>WalletConfigConsensus::client_default_bitcoin_rpc</code>.CfPoints to a Bitcoin API that the client can use to \xe2\x80\xa610CcCreate a backoff strategy for API version requests.ClAttempt buying preimage from this federation in order to \xe2\x80\xa6CbPay lightning invoice on behalf of federation userCgReturns the number of sessions already saved in the \xe2\x80\xa6CjUses the in-memory config to write a config backup tar \xe2\x80\xa6DcYou likely want to use <code>Client::get_peer_urls</code>. This \xe2\x80\xa6ClComputes the 24 hour payment summary statistics for this \xe2\x80\xa60BmTrigger rechecking for deposits on an address0CaThe maximum amount of change a client can request0ChLike open_in_place, except the authentication tag is \xe2\x80\xa6CjReturns a map of peer ID to connection type (Direct or \xe2\x80\xa6DfLike <code>super::SealingKey::seal_in_place_separate_tag()</code>, \xe2\x80\xa6CjTries to download the <code>ClientConfig</code> only once.CjValidates the database migrations for a client module. \xe2\x80\xa60DgValidates the database migrations. <code>decoders</code> need to be \xe2\x80\xa60CjValidates the database migrations for a server module. \xe2\x80\xa60ChWaits for ongoing incoming LNv1 and LNv2 payments to \xe2\x80\xa6CkA transaction that acts as isolated for module code but \xe2\x80\xa60DgA type-erased value implementing <code>IServerDbMigrationContext</code>AiLNv2 CLTV Delta in blocksClEnvironment variable for customizing the default routing \xe2\x80\xa6CdCore raw a operations database transactions supportsDcRe-exporting of everything from <code>fedimint_client_module</code>Cb\xe2\x80\x9c32kiB is enough for any module backup\xe2\x80\x9d \xe2\x80\x93dpcCnList of core api versions supported by the implementation. \xe2\x80\xa6CaWaits for the funds from an output created by \xe2\x80\xa60CkRetrieves a BOLT11 invoice from the connected Lightning \xe2\x80\xa60BdFill each tier pool to the gap limitChAttempts to deserialize an uncompressed element, not \xe2\x80\xa60CmHashes the client\xe2\x80\x99s preimage authentication secret with \xe2\x80\xa6DeFor CLIs, detects <code>version-hash</code> as a single argument, \xe2\x80\xa6CbMaximum number of parallel requests per connectionCmMine a block to include any pending transactions then get \xe2\x80\xa6B`Updated to wake up pegin monitorClThe code that handles new unordered events and rewriters \xe2\x80\xa6<CkSpawns a new background task that intercepts HTLCs from \xe2\x80\xa6CmA two hour buffer in case either the client or gateway go \xe2\x80\xa6CmKey used to lookup operation log entries in chronological \xe2\x80\xa6CiEnv var for bitcoin URL (default, takes priority over \xe2\x80\xa6BjThe Iroh relays hosted by Fedimint projectClEnvironment variable that instructs the gateway how many \xe2\x80\xa6Ee<code>IGlobalFederationApi</code> wrapping some <code>T: IRawFederationApi</code> \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>CiInformation about a gateway that is shared with other \xe2\x80\xa6CjInformation about a gateway that is stored locally and \xe2\x80\xa6BaSee <code>MintOutputStates</code>DiWrapper around <code>bitcoin::Network</code> that encodes and decodes \xe2\x80\xa6CkEvent that is fired when a recurring payment code (i.e. \xe2\x80\xa6EdSelect notes with total amount of <em>at least</em> <code>request_amount</code>. \xe2\x80\xa6CiMinimum age in ID count for trimable events to be deletedCiMinimum age in microseconds for trimable events to be \xe2\x80\xa6CkApplies the database migrations to a non-isolated database.AmNumber of rounds per session.DkCreates the <code>DatabaseVersion</code> inside the database if it does \xe2\x80\xa6ClFind the range of indexes in an monotonically increasing \xe2\x80\xa6ChSubscribe to updates when the gateway is handling an \xe2\x80\xa6CeVerifies that all database migrations are defined \xe2\x80\xa6ClReturns the challenge to the gateway that must be signed \xe2\x80\xa6ClWill return the oldest operation log key in the database \xe2\x80\xa6CkRetrieves the map of gateway remove challenges from the \xe2\x80\xa6CnIf the Gateway is connected to the Lightning node, returns \xe2\x80\xa60CgHandle a specific Iroh request. The request must be \xe2\x80\xa6BiThe commitment for the incoming contract.DiSee <code>Self::manual_operation_start</code>, just inside a database \xe2\x80\xa6DgHelper function to retrieve the <code>module_instance_id</code> for \xe2\x80\xa6CnReact to a valid pending nonce being tracked being used in \xe2\x80\xa6BfUse <code>Self::preview</code> insteadChWrapper that handles errors from config refresh with \xe2\x80\xa6CnRetrieves the signing challenge from each federation peer. \xe2\x80\xa6CnTotal amount of all change UTXOs from peg-out transactions \xe2\x80\xa60ChClaims a refund for an expired or cancelled outgoing \xe2\x80\xa6B`Register gateway with federationCiThe config gen params response which includes our peer idCfWhich port is for prometheus inside the range from \xe2\x80\xa6CmEnv var for bitcoin RPC kind (forced, takes priority over \xe2\x80\xa6BeEnv var to override iroh connectivityCkList of json api endpoint sources to use as a source of \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>CmNumber of blocks until outgoing lightning contracts times \xe2\x80\xa6CmUtility struct for formatting an intercepted HTLC. Useful \xe2\x80\xa6DgVerifies that the supplied <code>network</code> matches the Bitcoin \xe2\x80\xa60CmCreates a message to be signed by the Gateway\xe2\x80\x99s private \xe2\x80\xa6DkProcesses all variants in a <code>Punctuated</code> list extracting any \xe2\x80\xa6BiGet the meta manager to read meta fields.DhMaps LDK\xe2\x80\x99s <code>PaymentKind</code> to an optional preimage and an \xe2\x80\xa6DiLike <code>Self::internal_client</code> but will check and wait for a \xe2\x80\xa6CmAllocates a deposit address controlled by the federation, \xe2\x80\xa6CkScan unspent incoming contracts for a payment hash that \xe2\x80\xa6CmCreate the database backup directory for a client module. \xe2\x80\xa60CcStore prefetched peer API version responses and \xe2\x80\xa6ChTotal amount of all transaction outputs from peg-out \xe2\x80\xa60CnTotal amount of all change UTXOs from peg-out transactions \xe2\x80\xa60BfPreimage decryption shares we receivedClThe config gen params that need to be in consensus, sent \xe2\x80\xa6CgThe default maximum open connections the API can handleClEnv var for bitcoin URL (default, used only as a default \xe2\x80\xa6BmIncoming contracts are indexed in three ways:BnA module-typed wrapper over a typed-erased \xe2\x80\xa6Dk<code>apply_migrations_client</code> iterates from the on disk database \xe2\x80\xa6CmClaim the funded, unspent incoming contract by submitting \xe2\x80\xa6CcReceive over LN with a new invoice for another userBbReceive over LN with a new invoiceCfDeletes the database checkpoint directory equal to \xe2\x80\xa6DhNext <code>EventLogTrimableId</code> to use for new ordered trimable \xe2\x80\xa6CkReturns the child index to derive the next peg-in tweak \xe2\x80\xa6CmReturns the keypair that uniquely identifies the gateway, \xe2\x80\xa6EcReturns a new <code>TieredMulti</code> from a collection of <code>Tiered</code> \xe2\x80\xa6ClImplements the necessary traits for all associated types \xe2\x80\xa6CiImplements the necessary traits for all configuration \xe2\x80\xa6DnLike <code>Self::recheck_pegin_address</code> but by <code>operation_id</code>ClCoordinated shutdown of all peers that restart using the \xe2\x80\xa6CbSubscribe to recover progress for all the modules.ChTotal amount of all transaction outputs from peg-out \xe2\x80\xa60DhVerifies that the supplied <code>preimage_auth</code> is the same as theCnEnv variable the cargo will set during crate build to pass \xe2\x80\xa6CiEnv var for bitcoin RPC kind (default, used only as a \xe2\x80\xa6CdEnvironment variable for customizing the default \xe2\x80\xa6D`Devimint\xe2\x80\x99s \xe2\x80\x9cdata dir\xe2\x80\x9d (think <code>/usr/devimint/</code>).CnEnvironment variable that specifies the address the gateway\xe2\x80\xa6BhEnv var to override tcp api connectivityCaConvenience extension trait used for wrapping \xe2\x80\xa6ChOur preimage decryption shares that still need to be \xe2\x80\xa6Eg<code>IRawFederationApi</code> wrapping some <code>T: IRawFederationApi</code> in a \xe2\x80\xa6CjTests that client can detect federation config changes \xe2\x80\xa6ClTests that client info commands work when all federation \xe2\x80\xa6CnWraps an operation update stream such that the last update \xe2\x80\xa6CkCreates all inputs and outputs necessary to balance the \xe2\x80\xa60CkDownload most recent valid backup found from the FederationCcDownload a backup of the guardian\xe2\x80\x99s configurationDkImplements the <code>Display</code> trait for dyn newtypes whose traits \xe2\x80\xa6DeGet value of <code>FEDIMINT_BUILD_CODE_VERSION</code> at compile timeCkAdd funding and/or change to the transaction builder as \xe2\x80\xa6CkAttempt fulfill HTLC by buying preimage from the federationChReturns the number of held e-cash notes per denominationCbUI helper to get consensus data as a key-value mapCgCreates the directory within the data directory for \xe2\x80\xa6CeReturns true if running backwards-compatibility testsDhA part of <code>WalletClientInit::recover</code> extracted out to be \xe2\x80\xa6CmSpawns a new background task that subscribes to \xe2\x80\x9cadd\xe2\x80\x9d \xe2\x80\xa6CkReturns the input amount and output amount of a transactionCjIterates through all of the federations the gateway is \xe2\x80\xa600CjValidates the database migrations for the core client. \xe2\x80\xa60CiConsensus broadcast settings that result in 3 minutes \xe2\x80\xa6ChLike <code>IDatabaseTransactionOpsCore</code>, but typedDcRe-exporting of everything from <code>fedimint_client_module</code>DhOld version of <code>LightningReceiveSubmittedOffer</code>, used for \xe2\x80\xa6ClMeta source fetching meta values from the meta module if \xe2\x80\xa6CjNew client will start deriving new addresses from last \xe2\x80\xa6DjA type alias of a <code>DbMigrationFnContext</code> with inner context \xe2\x80\xa6CfConsensus-critical part of a server side module configClAn counter that resets on every restart, that guarantees \xe2\x80\xa6BlAwait the final state of the send operation.CkRegister to receiver all new transient (unpersisted) events0ClDefine a \xe2\x80\x9cmodule plugin dyn-newtype\xe2\x80\x9d which is like a \xe2\x80\xa6DiConstructs an <code>InviteCode</code> which contains as many guardian \xe2\x80\xa6DgMaximum consensus version supported by <em>all</em> our peers. Used \xe2\x80\xa6CjSchedule given address for immediate re-check for depositsCmRefetch client config from federation and save as pending \xe2\x80\xa6DcCreate a <code>Histogram</code> and registers to a custom registry.CeSubscribe to updates on the progress of a reissue \xe2\x80\xa6CnTotal amount of all change UTXOs from peg-out transactions \xe2\x80\xa60CnIn cases where we know exactly which module kind we expect \xe2\x80\xa60CbLNv1 event that is emitted when a preimage was \xe2\x80\xa6ClEvent that is emitted when a preimage is revealed to the \xe2\x80\xa6CbDB prefixes hardcoded for use of the event log \xe2\x80\xa6CkEnvironment variable that instructs the gateway to skip \xe2\x80\xa6DcRe-exporting of everything from <code>fedimint_client_module</code>BeApply core client database migrationsBgDuplicate default fedimint module setupBfUpdates about client recovery progress0CnCreate an incoming contract locked to a public key derived \xe2\x80\xa6BkMacro for defining module associated types.CmBlocks till the client has synced the guardian public key \xe2\x80\xa6ChGenerates an onchain address to fund the gateway\xe2\x80\x99s \xe2\x80\xa60BcGet the submissions for UI display,ChPays a BOLT12 offer using the gateway\xe2\x80\x99s lightning node0CgCheck for pending config and migrate it if present. \xe2\x80\xa6AkDefine a \xe2\x80\x9cplugin\xe2\x80\x9d traitCkFetches API URL announcements from guardians, validates \xe2\x80\xa6CgSaves a registered incoming contract, returning the \xe2\x80\xa6ChTotal amount of all transaction outputs from peg-out \xe2\x80\xa60CfTries to handle a lightning payment using the LNv2 \xe2\x80\xa6ClContinuously update the gateway cache whenever a gateway \xe2\x80\xa6CkSets the fedimint-cli binary to match the fedimintd\xe2\x80\x99s \xe2\x80\xa6CgBy default, the maximum notes per denomination when \xe2\x80\xa60DjMake <code>devimint</code> print stderr of called commands directly on \xe2\x80\xa6CaConvenience extension trait used for wrapping \xe2\x80\xa6CaAwait for num deposit by <code>OperationId</code>D`Pick <code>SpendableNote</code>s by given counts, when availableCiReturns the keypair that uniquely identifies the gateway.CiPolls the federation checking if the activated module \xe2\x80\xa6CjTest that client can init even when the federation is downDjTracks addresses <code>TweakIdx</code>s/addresses that are expected to \xe2\x80\xa6CkEnvironment variable that specifies the bcrypt password \xe2\x80\xa6ChRegistry that contains the config gen params for all \xe2\x80\xa6CnAn extension trait to access module-specific-typed apis of \xe2\x80\xa6BoAwait the final state of the receive operation.ClWaits for an output from the primary module to reach its \xe2\x80\xa6CiInstructs the Gateway\xe2\x80\x99s Lightning node to close all \xe2\x80\xa60ClRequests the gateway to pay an outgoing LN invoice using \xe2\x80\xa6DkIf <code>reencrypt_private_config</code> was interrupted, this function \xe2\x80\xa6EeRemoves <code>DatabaseVersion</code> from <code>DatabaseVersionKeyV0</code> if it \xe2\x80\xa6CnTest that client can detect federation config changes when \xe2\x80\xa6ClReturns once our bitcoin backend observes finality delay \xe2\x80\xa6BhEnv var how often to poll bitcoin sourceCbForce devimint to run a test with a deprecated \xe2\x80\xa6CbMaximum number of entries to trim in one operationCiAllocates a deposit address that is controlled by the \xe2\x80\xa6CjWaits for outputs from the primary module to reach its \xe2\x80\xa6CkCreates a BOLT12 offer using the gateway\xe2\x80\x99s lightning node0CkMaximum number of parallel requests per Iroh API connectionCnTries to set the outcome of an operation, but only logs an \xe2\x80\xa6CgLock pool used to ensure that our implementation of \xe2\x80\xa6DbSame as <code>Self::raw_find_by_prefix</code> but the order is \xe2\x80\xa6DaCreates the database backup for <code>snapshot_name</code> to \xe2\x80\xa60CnSpawns a new background task that subscribes to updates of \xe2\x80\xa6CaValidate and fallback invalid parts of the backupBhMaximum payload size of a backup requestDiOld (incorrect) version of the <code>ClientModuleRecoveryState</code> \xe2\x80\xa6CjConsensus broadcast settings that result in 10 seconds \xe2\x80\xa6ChModule consensus version that introduced support for \xe2\x80\xa60DkStatic version of <code>Self::get_derived_backup_signing_key</code> for \xe2\x80\xa6ClAsynchronously refetch client config from federation and \xe2\x80\xa6Dd<code>SupportedApiVersionsSummary</code> that the client and its \xe2\x80\xa6CnReserved module instance id used for client-internal state \xe2\x80\xa600CgAdd next nonce from <code>amount</code> tier to the \xe2\x80\xa6ChReceive over LN with a new invoice for another user, \xe2\x80\xa6CkDownload most recent valid backup found from the FederationCcImplement <code>Clone</code> on a \xe2\x80\x9cdyn newtype\xe2\x80\x9dCmCreates an invoice that is directly payable to the gateway\xe2\x80\xa6DhCreate an <code>IntCounterVec</code> and registers to a custom registry.CeSubscribe to all state updates of the send operation.ChTries to handle a lightning payment using the legacy \xe2\x80\xa6CgEnvironment variable for overriding the iroh secret keyEcImplement <code>Encodable</code> and <code>Decodable</code> for a \xe2\x80\x9cmodule dyn \xe2\x80\xa6CiQuery the federation for API version support and then \xe2\x80\xa6DjStatic version of <code>Self::get_derived_backup_encryption_key</code> \xe2\x80\xa6BcUI helper to get consensus revisionDcA copy of <code>module_lugin_static_trait_define</code> but for \xe2\x80\xa6ClPersists new active states by first removing all current \xe2\x80\xa6ChSubscribe to all state updates of the receive operation.CnLoad the common api versions to use from cache and start a \xe2\x80\xa6CmParse a mnemonic in normalized UTF8 in the given language \xe2\x80\xa6CnPersists new inactive states by first removing all current \xe2\x80\xa6CdDecode <code>Self</code> from a size-limited reader.CcChecks if we already have a signed API endpoint \xe2\x80\xa6DfRetrieves the persisted <code>CreateInvoicePayload</code> from the \xe2\x80\xa60ChFetch API versions from peers, retrying until we get \xe2\x80\xa6DhFetch responses from at least <code>num_responses_required</code> of \xe2\x80\xa6")