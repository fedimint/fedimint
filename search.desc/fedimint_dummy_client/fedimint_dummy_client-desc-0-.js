searchState.loadedDescShard("fedimint_dummy_client", 0, "Data needed by the state machine\nReturn our account\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nUse a broken printer to print a liability instead of money …\nRequest the federation prints money for us\nWait to receive money at an outpoint\nSend money to another user\nPrefixes between 0xd0..=0xff shall all be considered …\nPrefixes between 0xd0..=0xff shall all be considered …\nAn iterator over the variants of DbKeyPrefix\nPrefixes between 0xb0..=0xcf shall all be considered …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nMaps all <code>Unreachable</code> states in the state machine to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nMigrates the database from version 0 to version 1 by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\n<code>ToString::to_string</code>, but without panic on OOM.\nTracks a transaction\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<code>ToString::to_string</code>, but without panic on OOM.")