searchState.loadedDescShard("fedimint_lnv2_client", 0, "A two hour buffer in case either the client or gateway go …\nThe payment has been successful.\nThe payment has been successful.\nThe payment has been confirmed and we are issuing the …\nNumber of blocks until outgoing lightning contracts times …\nContains the error value\nContains the error value\nThe payment request has expired.\nThe payment request has expired.\nEither a programming error has occurred or the federation …\nEither a programming error has occurred or the federation …\nEither a programming error has occurred or the federation …\nEither a programming error has occurred or the federation …\nThe final state of an operation receiving a payment over …\nThe final state of an operation sending a payment over …\nWe are waiting for the gateway to complete the payment.\nWe are funding the contract to incentivize the gateway.\nContains the success value\nContains the success value\nWe are waiting for the payment.\nThe state of an operation receiving a payment over …\nThe payment has been refunded.\nThe payment has been refunded.\nThe payment has failed and we are refunding the contract.\nThe state of an operation sending a payment over lightning.\nThe payment was successful.\nThe payment was successful.\nAwait the final state of the receive operation.\nAwait the final state of the send operation.\nCreate an incoming contract locked to a public key derived …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalculate the absolute fee paid to the gateway on success.\nCalculate the absolute fee paid to the gateway on success.\nGenerate an lnurl for the client. You can optionally …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nRequest an invoice. For testing you can optionally specify …\nReceive an lnurl. You can optionally specify the batch …\nPay an invoice. For testing you can optionally specify a …\nSubscribe to all state updates of the receive operation.\nSubscribe to all state updates of the send operation.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nAdd a vetted gateway.\nAwait the final state of the receive operation.\nAwait the final state of the send operation.\nGateway subcommands\nGenerate a new lnurl.\nList all vetted gateways.\nLnurl subcommands\nUpdate the mapping from lightning node public keys to …\nRequest an invoice. For testing you can optionally specify …\nReceive an lnurl.\nRemove a vetted gateway.\nSelect an online vetted gateway; this command is intended …\nPay an invoice. For  testing  you can optionally specify a …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nPrefixes between 0xd0..=0xff shall all be considered …\nAn iterator over the variants of DbKeyPrefix\nPrefixes between 0xb0..=0xcf shall all be considered …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.")