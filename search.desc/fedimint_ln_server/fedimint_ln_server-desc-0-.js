searchState.loadedDescShard("fedimint_ln_server", 0, "The lightning module implements an account system. It does …\nQueries the database and returns all assets and …\nThis module’s contribution to the next consensus proposal\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the challenge to the gateway that must be signed …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee <code>ServerModule::output_status</code>\nThis function is called once for every consensus item. The …\nTry to spend a transaction input. On success all necessary …\nTry to create an output (e.g. issue notes, peg-out BTC, …\nRemoves the gateway registration record. First the …\nPreimage decryption shares we received\nPreimage decryption shares we received\nAn iterator over the variants of DbKeyPrefix\nWe save the hash of the encrypted preimage from each …\nWe keep a separate mapping of incoming and outgoing …\nOur preimage decryption shares that still need to be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\n<code>ToString::to_string</code>, but without panic on OOM.")