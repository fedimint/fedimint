searchState.loadedDescShard("fedimint_wallet_server", 0, "A peg-out tx that is ready to be broadcast with a tweak …\nA PSBT that is awaiting enough signatures from the …\nQueries the database and returns all assets and …\nBlock count updated periodically by a background task\nBroadcasting pending txes can be triggered immediately …\nGet the current consensus block count for UI display\nGet the current consensus fee rate for UI display\nThis module’s contribution to the next consensus proposal\nAttempts to create a tx ready to be signed from available …\nFee rate updated periodically by a background task\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nDB migrations to move from old to newer versions\nGet the current wallet summary for UI display\nShutdown the task group shared throughout fedimintd, …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nSee <code>ServerModule::output_status</code>\nMaximum consensus version supported by <em>all</em> our peers. Used …\nThis function is called once for every consensus item. The …\nTry to spend a transaction input. On success all necessary …\nTry to create an output (e.g. issue notes, peg-out BTC, …\nAdd a change UTXO to our spendable UTXO database after it …\nRemoves the <code>PendingTransaction</code> and any transactions tied …\nTry to attach signatures to a pending peg-out tx.\nGiven a tx created from an <code>WalletOutput</code>, validate there …\nReturns once our bitcoin backend observes finality delay …\nAn iterator over the variants of DbKeyPrefix\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nMigrate to v1, backfilling all previously pegged-in …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …")