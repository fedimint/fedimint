searchState.loadedDescShard("fedimint_client", 0, "Client library\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nData stored in regular backups so that restoring doesn’t …\nMain client type\nUsed to configure, assemble and build <code>Client</code>\nUser handle to the <code>Client</code> instance\nAn alias for a reference counted <code>ClientHandle</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nCommon module types shared between client and server\nNo double derivation\nRe-exporting of everything from <code>fedimint_client_module</code>\nContains the error value\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nData and API clients available to state machine …\nContains the success value\nRe-exporting of everything from <code>fedimint_client_module</code>\nThe type of root secret hashing\nDerive an extra round of federation-id to the secret, like …\nRe-exporting of everything from <code>fedimint_client_module</code>\nAll possible states this client can submit to the executor\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nAllows adding state machines from inside a transition to …\nAdds a state machine to the executor.\nRe-exporting of everything from <code>fedimint_client_module</code>\nReturns a reference to the client’s federation API …\nModule-specific API\nFederation Api announcement handling\nRe-exporting of everything from <code>fedimint_client_module</code>\nAuthentication details\nWaits for the funds from an output created by …\nWaits for the transaction to be accepted or rejected as …\nClient backup\nThis function is mostly meant for internal use, you are …\nCore <code>Client</code>\nUpdates about client recovery progress\nCreates all inputs and outputs necessary to balance the …\nDatabase keys used by the client\nModule-specific DB\nRe-exporting of everything from <code>fedimint_client_module</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreates a transaction with the supplied output and funding …\nThis function is mostly meant for internal use, you are …\nReturns the balance held by this module and available for …\nInstance id of the module\nGet a reference to the module\nReturns the fee the processing of this input requires.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nLeave the federation\nReceiver for events fired every time (ordered) log event …\nInternal client sender to wake up log ordering task every …\nManagement of meta fields\nReturned a reference client’s module API client, so that …\nGenerate random <code>OperationId</code>\nReturns the fee the processing of this output requires.\nGuardian’s own <code>peer_id</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nRe-exporting of everything from <code>fedimint_client_module</code>\nInitialize client.\nReturns a stream that will output the updated module …\nDoes this module support being a primary module\nRe-exporting of everything from <code>fedimint_client_module</code>\n<code>ToString::to_string</code>, but without panic on OOM.\n<code>ToString::to_string</code>, but without panic on OOM.\nEvent log event right after an api call\nEvent log event right before making an api call\nA wrapper over <code>IRawFederationApi</code> adding client side event …\nConvenience extension trait used for wrapping …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns a list of all peers and their respective API URLs …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nFetches API URL announcements from guardians, validates …\nClient state backup\nEncrypted version of <code>ClientBackup</code>.\nBackup metadata\n“32kiB is enough for any module backup” –dpc\nCreate empty metadata\nEncrypt with a key and turn into <code>EncryptedClientBackup</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCreate metadata as json from typed <code>val</code>\nAlign an ecoded message size up for better privacy\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nIs metadata empty\nApplication metadata\nModule specific-backup (if supported)\nSession count taken right before taking the backup used to …\nAttempt to deserialize metadata as typed json\nAttempt to deserialize metadata as untyped json (…\nValidate and fallback invalid parts of the backup\nMain client type\nList of core api versions supported by the implementation. …\nWaits for an output from the primary module to reach its …\nWaits for outputs from the primary module to reach its …\nPrepare an encrypted backup and send it to federation for …\nInitialize a client builder that can be configured to …\nUpdates about client recovery progress\nCreate a backup, include provided <code>metadata</code>\nDownload most recent valid backup found from the Federation\nAdd funding and/or change to the transaction builder as …\nAdds funding to a transaction or removes over-funding via …\nReturns the argument unchanged.\nReturns the argument unchanged.\nBackup id derived from the root secret key (public key …\nBalance available to the client for spending\nReturns the config of the client in JSON format.\nGet metadata value from the federation config itself\nStatic version of <code>Self::get_derived_backup_encryption_key</code> …\nStatic version of <code>Self::get_derived_backup_signing_key</code> for …\nRegister to receiver all new transient (unpersisted) events\nReturns the instance id of the first module of the given …\nReturns a reference to a typed module client instance by …\nBlocks till the client has synced the guardian public key …\nGet the meta manager to read meta fields.\nGet the client <code>Metadata</code>\nReturns a reference to the module, panics if not found\nYou likely want to use <code>Client::get_peer_urls</code>. This …\nReturns a list of guardian API URLs\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate an invite code with the api endpoint of the given …\nLoad the common api versions to use from cache and start a …\nReceiver for events fired every time (ordered) log event …\nInternal client sender to wake up log ordering task every …\nGet the meta manager to read meta fields.\nGet the primary module\nQuery the federation for API version support and then …\nReturns the data from which the client’s root secret is …\nSet the client <code>Metadata</code>\nSet the client <code>Metadata</code>\nReturns a stream that yields the current client balance …\nSubscribe to recover progress for all the modules.\n<code>SupportedApiVersionsSummary</code> that the client and its …\nGet the <code>TaskGroup</code> that is tied to Client’s lifetime.\nReturns the input amount and output amount of a transaction\nReturns a stream of transaction updates for the given …\nUpload <code>backup</code> to federation\nValidate backup before sending it to federation\nWait for all module recoveries to finish\nUsed to configure, assemble and build <code>Client</code>\nNo double derivation\nThe type of root secret hashing\nDerive an extra round of federation-id to the secret, like …\nBuild a <code>Client</code> and start the executor\nBuild a <code>Client</code> but do not start the executor\nGet the config\nDownload most recent valid backup found from the Federation\nRe-derive client’s <code>root_secret</code> using the federation ID. …\nReturns the argument unchanged.\nRegister to receiver all new transient (unpersisted) events\nCalls <code>U::from(self)</code>.\nJoin a new Federation\nMigrate client module databases\nUse <code>Self::preview</code> instead\nJoin a (possibly) previous joined Federation\nBuild the <code>Client</code> with a custom wrapper around its api …\nMake module generator available when reading the config\nReplace module generator registry entirely\nUses this module with the given instance id as the primary …\n<strong>You are likely looking for </strong>…\nUses this module kind as the primary module if present in …\nGlobal state given to a specific client module and state. …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nUser handle to the <code>Client</code> instance\nAn alias for a reference counted <code>ClientHandle</code>\nCreate\nRestart the client\nShutdown the client.\nKey used to lookup operation log entries in chronological …\nDoes the client modules need to run recovery before being …\nClient metadata that will be stored/restored on …\nOld (incorrect) version of the <code>ClientModuleRecoveryState</code> …\nClient initialization was complete\nAn iterator over the variants of DbKeyPrefix\nPrefixes between 0xb1..=0xcf shall all be considered …\nPrefixes between 0xb1..=0xcf shall all be considered …\nShould only be used with freshly generated root secret\nClient initialization mode\nLike <code>InitMode</code>, but without no longer required data.\nThe state of the client initialization\n0xd0.. reserved for Fedimint internal use\nLast valid backup the client attempted to make\nPer-module instance data\nV0 version of operation log entry for migration purposes\nClient data initialization might still require some work …\nShould be used with root secrets provided by the user to …\nArbitrary data of the applications integrating Fedimint …\n<code>apply_migrations_client</code> iterates from the on disk database …\nApply core client database migrations\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReads all active states from the database and returns …\nFetches the encoded client secret from the database and …\nReads all inactive states from the database and returns …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nConvert an iterator of anything into <code>FallibleIterator</code> by …\nPersists new active states by first removing all current …\nPersists new inactive states by first removing all current …\nConvert an iterator of <code>Result</code>s into <code>FallibleIterator</code> by …\n<code>ToString::to_string</code>, but without panic on OOM.\nService for managing the caching of meta fields.\nGet all meta entries.\nReturns the argument unchanged.\nGet the value for the meta field.\nCalls <code>U::from(self)</code>.\nTries to parse <code>str_value</code> as JSON. In the special case that …\nNOTE: this subscription never ends even after update task …\nNOTE: this subscription never ends even after update task …\nUpdate all source in background.\nWait until Meta Service is initialized, after this …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSee <code>ClientModuleInit::supported_api_versions</code>\nSee <code>ClientModuleInit::used_db_prefixes</code>\nWraps an operation update stream such that the last update …\nReturns the argument unchanged.\nWill return the oldest operation log key in the database …\nCalls <code>U::from(self)</code>.\nTries to set the outcome of an operation, but only logs an …\nReturns an a <code>UpdateStreamOrOutcome</code> enum that can be …\nReturns the last <code>limit</code> operations. To fetch the next page, …\nReturns an iterator over the ranges of operation log keys, …\nSets the outcome of an operation\nType representing the secret\nJust uses 64 random bytes and derives the secret from them\nTrait defining a way to generate, serialize and …\nDeserialization function for the external encoding\nSerialization function for the external encoding\nReturns the argument unchanged.\nConvenience function to derive fedimint-client root secret …\nCalls <code>U::from(self)</code>.\nRandom generation function for the external secret type\nConversion function from the external encoding to the …\nSee <code>ActiveStateKey</code>\nExecutor that drives forward state machines under its …\nBuilder to which module clients can be attached and used …\nPrefixes for executor DB entries\nSee <code>InactiveStateKey</code>\nAfter how many attempts a DB transaction is aborted with …\nAdds a number of state machines to the executor …\nAdds a number of state machines to the executor atomically …\nBuild <code>Executor</code> and spawn background task in <code>tasks</code> …\nCreates an <code>ExecutorBuilder</code>\n<strong>Mostly used for testing</strong>\n<strong>Mostly used for testing</strong>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nOnly meant for debug tooling\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns a reference to the <code>Notifier</code> that can be used to …\nAny time executor should notice state machine update (e.g. …\nStarts the executor, returning a receiver that will be …\nStarts the background thread that runs the state machines. …\nStops the executor, returning <code>Some(())</code> if the executor was …\nSee <code>Executor::stop_executor</code>.\nStops the background task that runs the state machines.\nAllow executor being built to run state machines …\nAllow executor being built to run state machines …\nAllow executor to build state machines associated with the …\nState transition notifier owned by the modularized client …\nNotifier send handle that can be shared to places where we …\nBroadcast channel used to send state transitions to all …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a new notifier for a specific module instance that …\nNotify all subscribers of a state transition\nNotify all subscribers of a state transition\nCreate a <code>NotifierSender</code> handle that lets the owner trigger …\nThe transaction has been accepted in consensus\nA group of inputs and state machines responsible for …\nThe transaction has been created and potentially already …\nA fake <code>sm::Context</code> for <code>NeverClientStateMachine</code>\nA fake <code>sm::State</code> that can actually never happen.\nThe transaction has been rejected by a quorum on submission\nReserved module instance id used for client-internal state …\nState machine to (re-)submit a transaction until it is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA version of <code>Self::new</code> for times where input does not …\nA version of <code>Self::new</code> for times where output does not …")