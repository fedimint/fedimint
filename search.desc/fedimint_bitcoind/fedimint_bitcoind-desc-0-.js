searchState.loadedDescShard("fedimint_bitcoind", 0, "Global factories for creating bitcoin RPCs\nTrait that allows interacting with the Bitcoin blockchain\nTrait for creating new bitcoin RPC clients\nCreate a bitcoin RPC of a given kind\nCreates a new bitcoin RPC client connection\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the Bitcoin RPC config\nReturns the current block count\nReturns the block hash at a given height\nEstimates the fee rate for a given confirmation target. …\nReturns the Bitcoin network the node is connected to\nGet script transaction history\nReturns the node’s estimated chain sync percentage as a …\nIf a transaction is included in a block, returns the block …\nReturns a proof that a tx is included in the bitcoin …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCheck if a transaction is included in a block\nRegister a new factory for creating bitcoin RPCs\nSpawns a background task that queries the block count …\nSpawns a background task that queries the feerate …\nSubmits a transaction to the Bitcoin network\nWatches for a script and returns any transactions …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA feerate that we don’t expect to ever happen in …\nLike <code>FEERATE_SOURCE_MAX_FEERATE_SATS_PER_VB</code>, but minimum …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.")