searchState.loadedDescShard("fedimint_server_core", 0, "Fedimint Core Server module interface\nBackend side module interface\nInterface for Module Generation\nModule Generation trait with associated types\nCollection of server modules\nA type that can be used as module-shared value inside …\nReturns a list of custom API endpoints defined by the …\nReturns a list of custom API endpoints defined by the …\nQueries the database and returns all assets and …\nQueries the database and returns all assets and …\nThis module’s contribution to the next consensus …\nThis module’s contribution to the next consensus proposal\nReturns the decoder belonging to the server module\nReturns a decoder for the following associated types of …\nGenerate a <code>ModuleDecoderRegistry</code> from this <code>ModuleRegistry</code>\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts the consensus config into the client config\nRetrieves the migrations map from the server module to be …\nRetrieves the migrations map from the server module to be …\nInitialize the <code>DynServerModule</code> instance from its config\nInitialize the module instance from its config\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\n<strong>Deprecated</strong>: Modules should not be using it. Instead, they …\nSee <code>ServerModule::output_status</code>\nThis function is called once for every consensus item. The …\nThis function is called once for every consensus item. The …\nTry to spend a transaction input. On success all necessary …\nTry to spend a transaction input. On success all necessary …\nTry to create an output (e.g. issue notes, peg-out BTC, …\nTry to create an output (e.g. issue notes, peg-out BTC, …\nSee <code>ServerModuleInit::used_db_prefixes</code>\nDb prefixes used by the module\nVersion of the module consensus supported by this …\nExchanges a <code>DkgPeerMsg::Module(Vec&lt;u8&gt;)</code> with all peers. …\nExtension trait for IDashboardApi providing type-safe …\nInterface for guardian dashboard API in a running …\nGet the guardian’s authentication details\nGet the federation audit summary\nGet the federation invite code to share with users\nGet the federation name\nGet a typed reference to a server module instance by kind\nGet reference to a server module instance by module kind\nGet the guardian name\nCreate a trait object\nReturns a map of peer ID to connection status\nGet the current active session count\nInterface for Module Generation\nModule Generation trait with associated types\nA type that can be used as module-shared value inside …\nConverts the consensus config into the client config\nRetrieves the migrations map from the server module to be …\nRetrieves the migrations map from the server module to be …\nInitialize the <code>DynServerModule</code> instance from its config\nInitialize the module instance from its config\nSee <code>ServerModuleInit::used_db_prefixes</code>\nDb prefixes used by the module\nVersion of the module consensus supported by this …\nTyped history item of a module\nA type-erased value implementing <code>IServerDbMigrationContext</code>\nA <code>DbMigrationFn</code> with inner-context type-erased for all …\nAn interface a server module db migration context needs to …\nTyped history item of a module\nA <code>DbMigrationFnContext</code> with inner-context type-erased …\nA module-typed wrapper over a typed-erased …\nA <code>DbMigrationFn</code> with inner-context type-specific for a …\nA type alias of a <code>DbMigrationFnContext</code> with inner context …\nAn extension trait to access module-specific-typed apis of …\nSee <code>apply_migrations_server_dbtx</code>\nApplies the database migrations to a non-isolated database.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nGet a stream of historical consensus items belonging to …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nA token proving the the API call was authenticated\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nInterface for the web UI to interact with the config …\nAdd peer connection info\nGet the auth token for API calls\nGet list of names of connected peers\nCreate a trait object\nGet our connection info encoded as base32 string\nReset all connection info (remove all peers)\nSet local guardian parameters\nStart the distributed key generation process")